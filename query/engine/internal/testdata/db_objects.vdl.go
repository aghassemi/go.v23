// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file was auto-generated by the vanadium vdl tool.
// Source: db_objects.vdl

package testdata

import (
	"fmt"
	"time"
	"v.io/v23/vdl"
	time_2 "v.io/v23/vdlroot/time"
)

type AddressInfo struct {
	Street string
	City   string
	State  string
	Zip    string
}

func (AddressInfo) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.AddressInfo"`
}) {
}

func (m *AddressInfo) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AddressInfo == nil || __VDLTypedb_objects0 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Street")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Street), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("City")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromString(string(m.City), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("State")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget7.FromString(string(m.State), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
			return err
		}
	}
	keyTarget8, fieldTarget9, err := fieldsTarget1.StartField("Zip")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget9.FromString(string(m.Zip), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget8, fieldTarget9); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *AddressInfo) MakeVDLTarget() vdl.Target {
	return nil
}

type CreditAgency int

const (
	CreditAgencyEquifax CreditAgency = iota
	CreditAgencyExperian
	CreditAgencyTransUnion
)

// CreditAgencyAll holds all labels for CreditAgency.
var CreditAgencyAll = [...]CreditAgency{CreditAgencyEquifax, CreditAgencyExperian, CreditAgencyTransUnion}

// CreditAgencyFromString creates a CreditAgency from a string label.
func CreditAgencyFromString(label string) (x CreditAgency, err error) {
	err = x.Set(label)
	return
}

// Set assigns label to x.
func (x *CreditAgency) Set(label string) error {
	switch label {
	case "Equifax", "equifax":
		*x = CreditAgencyEquifax
		return nil
	case "Experian", "experian":
		*x = CreditAgencyExperian
		return nil
	case "TransUnion", "transunion":
		*x = CreditAgencyTransUnion
		return nil
	}
	*x = -1
	return fmt.Errorf("unknown label %q in testdata.CreditAgency", label)
}

// String returns the string label of x.
func (x CreditAgency) String() string {
	switch x {
	case CreditAgencyEquifax:
		return "Equifax"
	case CreditAgencyExperian:
		return "Experian"
	case CreditAgencyTransUnion:
		return "TransUnion"
	}
	return ""
}

func (CreditAgency) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.CreditAgency"`
	Enum struct{ Equifax, Experian, TransUnion string }
}) {
}

func (m CreditAgency) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	if err := t.FromEnumLabel(m.String(), __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditAgency); err != nil {
		return err
	}
	return nil
}

func (m CreditAgency) MakeVDLTarget() vdl.Target {
	return nil
}

type ExperianRating int

const (
	ExperianRatingGood ExperianRating = iota
	ExperianRatingBad
)

// ExperianRatingAll holds all labels for ExperianRating.
var ExperianRatingAll = [...]ExperianRating{ExperianRatingGood, ExperianRatingBad}

// ExperianRatingFromString creates a ExperianRating from a string label.
func ExperianRatingFromString(label string) (x ExperianRating, err error) {
	err = x.Set(label)
	return
}

// Set assigns label to x.
func (x *ExperianRating) Set(label string) error {
	switch label {
	case "Good", "good":
		*x = ExperianRatingGood
		return nil
	case "Bad", "bad":
		*x = ExperianRatingBad
		return nil
	}
	*x = -1
	return fmt.Errorf("unknown label %q in testdata.ExperianRating", label)
}

// String returns the string label of x.
func (x ExperianRating) String() string {
	switch x {
	case ExperianRatingGood:
		return "Good"
	case ExperianRatingBad:
		return "Bad"
	}
	return ""
}

func (ExperianRating) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.ExperianRating"`
	Enum struct{ Good, Bad string }
}) {
}

func (m ExperianRating) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	if err := t.FromEnumLabel(m.String(), __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianRating); err != nil {
		return err
	}
	return nil
}

func (m ExperianRating) MakeVDLTarget() vdl.Target {
	return nil
}

type RatingsArray [4]int16

func (RatingsArray) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.RatingsArray"`
}) {
}

func (m RatingsArray) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	listTarget1, err := t.StartList(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_RatingsArray, 4)
	if err != nil {
		return err
	}
	for i, elem3 := range m {
		elemTarget2, err := listTarget1.StartElem(i)
		if err != nil {
			return err
		}
		if err := elemTarget2.FromInt(int64(elem3), vdl.Int16Type); err != nil {
			return err
		}
		if err := listTarget1.FinishElem(elemTarget2); err != nil {
			return err
		}
	}
	if err := t.FinishList(listTarget1); err != nil {
		return err
	}
	return nil
}

func (m RatingsArray) MakeVDLTarget() vdl.Target {
	return nil
}

type EquifaxCreditReport struct {
	Rating           byte
	FourScoreRatings RatingsArray
}

func (EquifaxCreditReport) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.EquifaxCreditReport"`
}) {
}

func (m *EquifaxCreditReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_EquifaxCreditReport == nil || __VDLTypedb_objects1 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Rating")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromUint(uint64(m.Rating), vdl.ByteType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("FourScoreRatings")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.FourScoreRatings.FillVDLTarget(fieldTarget5, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_RatingsArray); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *EquifaxCreditReport) MakeVDLTarget() vdl.Target {
	return nil
}

type Tdh int

const (
	TdhTom Tdh = iota
	TdhDick
	TdhHarry
)

// TdhAll holds all labels for Tdh.
var TdhAll = [...]Tdh{TdhTom, TdhDick, TdhHarry}

// TdhFromString creates a Tdh from a string label.
func TdhFromString(label string) (x Tdh, err error) {
	err = x.Set(label)
	return
}

// Set assigns label to x.
func (x *Tdh) Set(label string) error {
	switch label {
	case "Tom", "tom":
		*x = TdhTom
		return nil
	case "Dick", "dick":
		*x = TdhDick
		return nil
	case "Harry", "harry":
		*x = TdhHarry
		return nil
	}
	*x = -1
	return fmt.Errorf("unknown label %q in testdata.Tdh", label)
}

// String returns the string label of x.
func (x Tdh) String() string {
	switch x {
	case TdhTom:
		return "Tom"
	case TdhDick:
		return "Dick"
	case TdhHarry:
		return "Harry"
	}
	return ""
}

func (Tdh) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.Tdh"`
	Enum struct{ Tom, Dick, Harry string }
}) {
}

func (m Tdh) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	if err := t.FromEnumLabel(m.String(), __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Tdh); err != nil {
		return err
	}
	return nil
}

func (m Tdh) MakeVDLTarget() vdl.Target {
	return nil
}

type ExperianCreditReport struct {
	Rating       ExperianRating
	TdhApprovals map[Tdh]struct{}
	Auditor      Tdh
}

func (ExperianCreditReport) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.ExperianCreditReport"`
}) {
}

func (m *ExperianCreditReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianCreditReport == nil || __VDLTypedb_objects2 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Rating")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Rating.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianRating); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("TdhApprovals")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget6, err := fieldTarget5.StartSet(__VDLTypedb_objects3, len(m.TdhApprovals))
		if err != nil {
			return err
		}
		for key8 := range m.TdhApprovals {
			keyTarget7, err := setTarget6.StartKey()
			if err != nil {
				return err
			}

			if err := key8.FillVDLTarget(keyTarget7, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Tdh); err != nil {
				return err
			}
			if err := setTarget6.FinishKey(keyTarget7); err != nil {
				return err
			}
		}
		if err := fieldTarget5.FinishSet(setTarget6); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("Auditor")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Auditor.FillVDLTarget(fieldTarget10, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Tdh); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *ExperianCreditReport) MakeVDLTarget() vdl.Target {
	return nil
}

type TransUnionCreditReport struct {
	Rating          int16
	PreviousRatings map[string]int16
}

func (TransUnionCreditReport) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.TransUnionCreditReport"`
}) {
}

func (m *TransUnionCreditReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TransUnionCreditReport == nil || __VDLTypedb_objects4 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Rating")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromInt(int64(m.Rating), vdl.Int16Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("PreviousRatings")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget6, err := fieldTarget5.StartMap(__VDLTypedb_objects5, len(m.PreviousRatings))
		if err != nil {
			return err
		}
		for key8, value10 := range m.PreviousRatings {
			keyTarget7, err := mapTarget6.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget7.FromString(string(key8), vdl.StringType); err != nil {
				return err
			}
			valueTarget9, err := mapTarget6.FinishKeyStartField(keyTarget7)
			if err != nil {
				return err
			}
			if err := valueTarget9.FromInt(int64(value10), vdl.Int16Type); err != nil {
				return err
			}
			if err := mapTarget6.FinishField(keyTarget7, valueTarget9); err != nil {
				return err
			}
		}
		if err := fieldTarget5.FinishMap(mapTarget6); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *TransUnionCreditReport) MakeVDLTarget() vdl.Target {
	return nil
}

type (
	// AgencyReport represents any single field of the AgencyReport union type.
	AgencyReport interface {
		// Index returns the field index.
		Index() int
		// Interface returns the field value as an interface.
		Interface() interface{}
		// Name returns the field name.
		Name() string
		// __VDLReflect describes the AgencyReport union type.
		__VDLReflect(__AgencyReportReflect)
		FillVDLTarget(vdl.Target, *vdl.Type) error
	}
	// AgencyReportEquifaxReport represents field EquifaxReport of the AgencyReport union type.
	AgencyReportEquifaxReport struct{ Value EquifaxCreditReport }
	// AgencyReportExperianReport represents field ExperianReport of the AgencyReport union type.
	AgencyReportExperianReport struct{ Value ExperianCreditReport }
	// AgencyReportTransUnionReport represents field TransUnionReport of the AgencyReport union type.
	AgencyReportTransUnionReport struct{ Value TransUnionCreditReport }
	// __AgencyReportReflect describes the AgencyReport union type.
	__AgencyReportReflect struct {
		Name  string `vdl:"v.io/v23/query/engine/internal/testdata.AgencyReport"`
		Type  AgencyReport
		Union struct {
			EquifaxReport    AgencyReportEquifaxReport
			ExperianReport   AgencyReportExperianReport
			TransUnionReport AgencyReportTransUnionReport
		}
	}
)

func (x AgencyReportEquifaxReport) Index() int                         { return 0 }
func (x AgencyReportEquifaxReport) Interface() interface{}             { return x.Value }
func (x AgencyReportEquifaxReport) Name() string                       { return "EquifaxReport" }
func (x AgencyReportEquifaxReport) __VDLReflect(__AgencyReportReflect) {}

func (m AgencyReportEquifaxReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	fieldsTarget1, err := t.StartFields(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AgencyReport)
	if err != nil {
		return err
	}
	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("EquifaxReport")
	if err != nil {
		return err
	}

	if err := m.Value.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_EquifaxCreditReport); err != nil {
		return err
	}
	if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
		return err
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}

	return nil
}

func (m AgencyReportEquifaxReport) MakeVDLTarget() vdl.Target {
	return nil
}

func (x AgencyReportExperianReport) Index() int                         { return 1 }
func (x AgencyReportExperianReport) Interface() interface{}             { return x.Value }
func (x AgencyReportExperianReport) Name() string                       { return "ExperianReport" }
func (x AgencyReportExperianReport) __VDLReflect(__AgencyReportReflect) {}

func (m AgencyReportExperianReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	fieldsTarget1, err := t.StartFields(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AgencyReport)
	if err != nil {
		return err
	}
	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("ExperianReport")
	if err != nil {
		return err
	}

	if err := m.Value.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianCreditReport); err != nil {
		return err
	}
	if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
		return err
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}

	return nil
}

func (m AgencyReportExperianReport) MakeVDLTarget() vdl.Target {
	return nil
}

func (x AgencyReportTransUnionReport) Index() int                         { return 2 }
func (x AgencyReportTransUnionReport) Interface() interface{}             { return x.Value }
func (x AgencyReportTransUnionReport) Name() string                       { return "TransUnionReport" }
func (x AgencyReportTransUnionReport) __VDLReflect(__AgencyReportReflect) {}

func (m AgencyReportTransUnionReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	fieldsTarget1, err := t.StartFields(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AgencyReport)
	if err != nil {
		return err
	}
	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("TransUnionReport")
	if err != nil {
		return err
	}

	if err := m.Value.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TransUnionCreditReport); err != nil {
		return err
	}
	if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
		return err
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}

	return nil
}

func (m AgencyReportTransUnionReport) MakeVDLTarget() vdl.Target {
	return nil
}

type CreditReport struct {
	Agency CreditAgency
	Report AgencyReport
}

func (CreditReport) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.CreditReport"`
}) {
}

func (m *CreditReport) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditReport == nil || __VDLTypedb_objects6 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Agency")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Agency.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditAgency); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Report")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		unionValue6 := m.Report
		if unionValue6 == nil {
			unionValue6 = AgencyReportEquifaxReport{}
		}
		if err := unionValue6.FillVDLTarget(fieldTarget5, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AgencyReport); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *CreditReport) MakeVDLTarget() vdl.Target {
	return nil
}

type Customer struct {
	Name              string
	Id                int64
	Active            bool
	Address           AddressInfo
	PreviousAddresses []AddressInfo
	Credit            CreditReport
}

func (Customer) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.Customer"`
}) {
}

func (m *Customer) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Customer == nil || __VDLTypedb_objects7 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Name")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Name), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Id")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromInt(int64(m.Id), vdl.Int64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Active")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget7.FromBool(bool(m.Active), vdl.BoolType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
			return err
		}
	}
	keyTarget8, fieldTarget9, err := fieldsTarget1.StartField("Address")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Address.FillVDLTarget(fieldTarget9, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AddressInfo); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget8, fieldTarget9); err != nil {
			return err
		}
	}
	keyTarget10, fieldTarget11, err := fieldsTarget1.StartField("PreviousAddresses")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		listTarget12, err := fieldTarget11.StartList(__VDLTypedb_objects8, len(m.PreviousAddresses))
		if err != nil {
			return err
		}
		for i, elem14 := range m.PreviousAddresses {
			elemTarget13, err := listTarget12.StartElem(i)
			if err != nil {
				return err
			}

			if err := elem14.FillVDLTarget(elemTarget13, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AddressInfo); err != nil {
				return err
			}
			if err := listTarget12.FinishElem(elemTarget13); err != nil {
				return err
			}
		}
		if err := fieldTarget11.FinishList(listTarget12); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget10, fieldTarget11); err != nil {
			return err
		}
	}
	keyTarget15, fieldTarget16, err := fieldsTarget1.StartField("Credit")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Credit.FillVDLTarget(fieldTarget16, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditReport); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget15, fieldTarget16); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *Customer) MakeVDLTarget() vdl.Target {
	return nil
}

type Invoice struct {
	CustId      int64
	InvoiceNum  int64
	InvoiceDate time.Time
	Amount      int64
	ShipTo      AddressInfo
}

func (Invoice) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.Invoice"`
}) {
}

func (m *Invoice) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	__VDLEnsureNativeBuilt_db_objects()
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("CustId")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromInt(int64(m.CustId), vdl.Int64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("InvoiceNum")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromInt(int64(m.InvoiceNum), vdl.Int64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	var wireValue6 time_2.Time
	if err := time_2.TimeFromNative(&wireValue6, m.InvoiceDate); err != nil {
		return err
	}

	keyTarget7, fieldTarget8, err := fieldsTarget1.StartField("InvoiceDate")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue6.FillVDLTarget(fieldTarget8, __VDLType_db_objects_time_Time); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget7, fieldTarget8); err != nil {
			return err
		}
	}
	keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("Amount")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget10.FromInt(int64(m.Amount), vdl.Int64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
			return err
		}
	}
	keyTarget11, fieldTarget12, err := fieldsTarget1.StartField("ShipTo")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.ShipTo.FillVDLTarget(fieldTarget12, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AddressInfo); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget11, fieldTarget12); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *Invoice) MakeVDLTarget() vdl.Target {
	return nil
}

type Numbers struct {
	B    byte
	Ui16 uint16
	Ui32 uint32
	Ui64 uint64
	I16  int16
	I32  int32
	I64  int64
	F32  float32
	F64  float64
	C64  complex64
	C128 complex128
}

func (Numbers) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.Numbers"`
}) {
}

func (m *Numbers) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Numbers == nil || __VDLTypedb_objects10 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromUint(uint64(m.B), vdl.ByteType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Ui16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromUint(uint64(m.Ui16), vdl.Uint16Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Ui32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget7.FromUint(uint64(m.Ui32), vdl.Uint32Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
			return err
		}
	}
	keyTarget8, fieldTarget9, err := fieldsTarget1.StartField("Ui64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget9.FromUint(uint64(m.Ui64), vdl.Uint64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget8, fieldTarget9); err != nil {
			return err
		}
	}
	keyTarget10, fieldTarget11, err := fieldsTarget1.StartField("I16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget11.FromInt(int64(m.I16), vdl.Int16Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget10, fieldTarget11); err != nil {
			return err
		}
	}
	keyTarget12, fieldTarget13, err := fieldsTarget1.StartField("I32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget13.FromInt(int64(m.I32), vdl.Int32Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget12, fieldTarget13); err != nil {
			return err
		}
	}
	keyTarget14, fieldTarget15, err := fieldsTarget1.StartField("I64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget15.FromInt(int64(m.I64), vdl.Int64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget14, fieldTarget15); err != nil {
			return err
		}
	}
	keyTarget16, fieldTarget17, err := fieldsTarget1.StartField("F32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget17.FromFloat(float64(m.F32), vdl.Float32Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget16, fieldTarget17); err != nil {
			return err
		}
	}
	keyTarget18, fieldTarget19, err := fieldsTarget1.StartField("F64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget19.FromFloat(float64(m.F64), vdl.Float64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget18, fieldTarget19); err != nil {
			return err
		}
	}
	keyTarget20, fieldTarget21, err := fieldsTarget1.StartField("C64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget21.FromComplex(complex128(m.C64), vdl.Complex64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget20, fieldTarget21); err != nil {
			return err
		}
	}
	keyTarget22, fieldTarget23, err := fieldsTarget1.StartField("C128")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget23.FromComplex(complex128(m.C128), vdl.Complex128Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget22, fieldTarget23); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *Numbers) MakeVDLTarget() vdl.Target {
	return nil
}

type FooType struct {
	Bar BarType
}

func (FooType) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.FooType"`
}) {
}

func (m *FooType) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FooType == nil || __VDLTypedb_objects11 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Bar")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Bar.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BarType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *FooType) MakeVDLTarget() vdl.Target {
	return nil
}

type BarType struct {
	Baz BazType
}

func (BarType) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.BarType"`
}) {
}

func (m *BarType) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BarType == nil || __VDLTypedb_objects12 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Baz")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Baz.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BazType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *BarType) MakeVDLTarget() vdl.Target {
	return nil
}

type (
	// TitleOrValueType represents any single field of the TitleOrValueType union type.
	TitleOrValueType interface {
		// Index returns the field index.
		Index() int
		// Interface returns the field value as an interface.
		Interface() interface{}
		// Name returns the field name.
		Name() string
		// __VDLReflect describes the TitleOrValueType union type.
		__VDLReflect(__TitleOrValueTypeReflect)
		FillVDLTarget(vdl.Target, *vdl.Type) error
	}
	// TitleOrValueTypeTitle represents field Title of the TitleOrValueType union type.
	TitleOrValueTypeTitle struct{ Value string }
	// TitleOrValueTypeValue represents field Value of the TitleOrValueType union type.
	TitleOrValueTypeValue struct{ Value int64 }
	// __TitleOrValueTypeReflect describes the TitleOrValueType union type.
	__TitleOrValueTypeReflect struct {
		Name  string `vdl:"v.io/v23/query/engine/internal/testdata.TitleOrValueType"`
		Type  TitleOrValueType
		Union struct {
			Title TitleOrValueTypeTitle
			Value TitleOrValueTypeValue
		}
	}
)

func (x TitleOrValueTypeTitle) Index() int                             { return 0 }
func (x TitleOrValueTypeTitle) Interface() interface{}                 { return x.Value }
func (x TitleOrValueTypeTitle) Name() string                           { return "Title" }
func (x TitleOrValueTypeTitle) __VDLReflect(__TitleOrValueTypeReflect) {}

func (m TitleOrValueTypeTitle) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	fieldsTarget1, err := t.StartFields(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TitleOrValueType)
	if err != nil {
		return err
	}
	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Title")
	if err != nil {
		return err
	}
	if err := fieldTarget3.FromString(string(m.Value), vdl.StringType); err != nil {
		return err
	}
	if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
		return err
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}

	return nil
}

func (m TitleOrValueTypeTitle) MakeVDLTarget() vdl.Target {
	return nil
}

func (x TitleOrValueTypeValue) Index() int                             { return 1 }
func (x TitleOrValueTypeValue) Interface() interface{}                 { return x.Value }
func (x TitleOrValueTypeValue) Name() string                           { return "Value" }
func (x TitleOrValueTypeValue) __VDLReflect(__TitleOrValueTypeReflect) {}

func (m TitleOrValueTypeValue) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	fieldsTarget1, err := t.StartFields(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TitleOrValueType)
	if err != nil {
		return err
	}
	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Value")
	if err != nil {
		return err
	}
	if err := fieldTarget3.FromInt(int64(m.Value), vdl.Int64Type); err != nil {
		return err
	}
	if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
		return err
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}

	return nil
}

func (m TitleOrValueTypeValue) MakeVDLTarget() vdl.Target {
	return nil
}

type BazType struct {
	Name         string
	TitleOrValue TitleOrValueType
}

func (BazType) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.BazType"`
}) {
}

func (m *BazType) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BazType == nil || __VDLTypedb_objects13 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Name")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Name), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("TitleOrValue")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		unionValue6 := m.TitleOrValue
		if unionValue6 == nil {
			unionValue6 = TitleOrValueTypeTitle{}
		}
		if err := unionValue6.FillVDLTarget(fieldTarget5, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TitleOrValueType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *BazType) MakeVDLTarget() vdl.Target {
	return nil
}

type K struct {
	A byte
	B string
}

func (K) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.K"`
}) {
}

func (m *K) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_K == nil || __VDLTypedb_objects14 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("A")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromUint(uint64(m.A), vdl.ByteType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromString(string(m.B), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *K) MakeVDLTarget() vdl.Target {
	return nil
}

type V struct {
	A string
	B float32
}

func (V) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.V"`
}) {
}

func (m *V) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_V == nil || __VDLTypedb_objects15 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("A")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.A), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromFloat(float64(m.B), vdl.Float32Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *V) MakeVDLTarget() vdl.Target {
	return nil
}

type FunWithMaps struct {
	Key       K
	Map       map[K]V
	Confusing map[int16][]map[string]struct{}
}

func (FunWithMaps) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.FunWithMaps"`
}) {
}

func (m *FunWithMaps) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FunWithMaps == nil || __VDLTypedb_objects16 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Key")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Key.FillVDLTarget(fieldTarget3, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_K); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Map")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget6, err := fieldTarget5.StartMap(__VDLTypedb_objects17, len(m.Map))
		if err != nil {
			return err
		}
		for key8, value10 := range m.Map {
			keyTarget7, err := mapTarget6.StartKey()
			if err != nil {
				return err
			}

			if err := key8.FillVDLTarget(keyTarget7, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_K); err != nil {
				return err
			}
			valueTarget9, err := mapTarget6.FinishKeyStartField(keyTarget7)
			if err != nil {
				return err
			}

			if err := value10.FillVDLTarget(valueTarget9, __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_V); err != nil {
				return err
			}
			if err := mapTarget6.FinishField(keyTarget7, valueTarget9); err != nil {
				return err
			}
		}
		if err := fieldTarget5.FinishMap(mapTarget6); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget11, fieldTarget12, err := fieldsTarget1.StartField("Confusing")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget13, err := fieldTarget12.StartMap(__VDLTypedb_objects18, len(m.Confusing))
		if err != nil {
			return err
		}
		for key15, value17 := range m.Confusing {
			keyTarget14, err := mapTarget13.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget14.FromInt(int64(key15), vdl.Int16Type); err != nil {
				return err
			}
			valueTarget16, err := mapTarget13.FinishKeyStartField(keyTarget14)
			if err != nil {
				return err
			}

			listTarget18, err := valueTarget16.StartList(__VDLTypedb_objects19, len(value17))
			if err != nil {
				return err
			}
			for i, elem20 := range value17 {
				elemTarget19, err := listTarget18.StartElem(i)
				if err != nil {
					return err
				}

				setTarget21, err := elemTarget19.StartSet(__VDLTypedb_objects20, len(elem20))
				if err != nil {
					return err
				}
				for key23 := range elem20 {
					keyTarget22, err := setTarget21.StartKey()
					if err != nil {
						return err
					}
					if err := keyTarget22.FromString(string(key23), vdl.StringType); err != nil {
						return err
					}
					if err := setTarget21.FinishKey(keyTarget22); err != nil {
						return err
					}
				}
				if err := elemTarget19.FinishSet(setTarget21); err != nil {
					return err
				}
				if err := listTarget18.FinishElem(elemTarget19); err != nil {
					return err
				}
			}
			if err := valueTarget16.FinishList(listTarget18); err != nil {
				return err
			}
			if err := mapTarget13.FinishField(keyTarget14, valueTarget16); err != nil {
				return err
			}
		}
		if err := fieldTarget12.FinishMap(mapTarget13); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget11, fieldTarget12); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *FunWithMaps) MakeVDLTarget() vdl.Target {
	return nil
}

type FunWithTypes struct {
	T1 *vdl.Type
	T2 *vdl.Type
}

func (FunWithTypes) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.FunWithTypes"`
}) {
}

func (m *FunWithTypes) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FunWithTypes == nil || __VDLTypedb_objects21 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("T1")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		typeObjectVal4 := m.T1
		if typeObjectVal4 == nil {
			typeObjectVal4 = vdl.AnyType
		}
		if err := fieldTarget3.FromTypeObject(typeObjectVal4); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget5, fieldTarget6, err := fieldsTarget1.StartField("T2")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		typeObjectVal7 := m.T2
		if typeObjectVal7 == nil {
			typeObjectVal7 = vdl.AnyType
		}
		if err := fieldTarget6.FromTypeObject(typeObjectVal7); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget5, fieldTarget6); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *FunWithTypes) MakeVDLTarget() vdl.Target {
	return nil
}

type ManyMaps struct {
	B    map[bool]string
	By   map[byte]string
	U16  map[uint16]string
	U32  map[uint32]string
	U64  map[uint64]string
	I16  map[int16]string
	I32  map[int32]string
	I64  map[int64]string
	F32  map[float32]string
	F64  map[float64]string
	C64  map[complex64]string
	C128 map[complex128]string
	S    map[string]string
	Ms   map[string]map[string]string
	T    map[time.Time]string
}

func (ManyMaps) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.ManyMaps"`
}) {
}

func (m *ManyMaps) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	__VDLEnsureNativeBuilt_db_objects()
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget4, err := fieldTarget3.StartMap(__VDLTypedb_objects23, len(m.B))
		if err != nil {
			return err
		}
		for key6, value8 := range m.B {
			keyTarget5, err := mapTarget4.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget5.FromBool(bool(key6), vdl.BoolType); err != nil {
				return err
			}
			valueTarget7, err := mapTarget4.FinishKeyStartField(keyTarget5)
			if err != nil {
				return err
			}
			if err := valueTarget7.FromString(string(value8), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget4.FinishField(keyTarget5, valueTarget7); err != nil {
				return err
			}
		}
		if err := fieldTarget3.FinishMap(mapTarget4); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("By")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget11, err := fieldTarget10.StartMap(__VDLTypedb_objects24, len(m.By))
		if err != nil {
			return err
		}
		for key13, value15 := range m.By {
			keyTarget12, err := mapTarget11.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget12.FromUint(uint64(key13), vdl.ByteType); err != nil {
				return err
			}
			valueTarget14, err := mapTarget11.FinishKeyStartField(keyTarget12)
			if err != nil {
				return err
			}
			if err := valueTarget14.FromString(string(value15), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget11.FinishField(keyTarget12, valueTarget14); err != nil {
				return err
			}
		}
		if err := fieldTarget10.FinishMap(mapTarget11); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
			return err
		}
	}
	keyTarget16, fieldTarget17, err := fieldsTarget1.StartField("U16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget18, err := fieldTarget17.StartMap(__VDLTypedb_objects25, len(m.U16))
		if err != nil {
			return err
		}
		for key20, value22 := range m.U16 {
			keyTarget19, err := mapTarget18.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget19.FromUint(uint64(key20), vdl.Uint16Type); err != nil {
				return err
			}
			valueTarget21, err := mapTarget18.FinishKeyStartField(keyTarget19)
			if err != nil {
				return err
			}
			if err := valueTarget21.FromString(string(value22), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget18.FinishField(keyTarget19, valueTarget21); err != nil {
				return err
			}
		}
		if err := fieldTarget17.FinishMap(mapTarget18); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget16, fieldTarget17); err != nil {
			return err
		}
	}
	keyTarget23, fieldTarget24, err := fieldsTarget1.StartField("U32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget25, err := fieldTarget24.StartMap(__VDLTypedb_objects26, len(m.U32))
		if err != nil {
			return err
		}
		for key27, value29 := range m.U32 {
			keyTarget26, err := mapTarget25.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget26.FromUint(uint64(key27), vdl.Uint32Type); err != nil {
				return err
			}
			valueTarget28, err := mapTarget25.FinishKeyStartField(keyTarget26)
			if err != nil {
				return err
			}
			if err := valueTarget28.FromString(string(value29), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget25.FinishField(keyTarget26, valueTarget28); err != nil {
				return err
			}
		}
		if err := fieldTarget24.FinishMap(mapTarget25); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget23, fieldTarget24); err != nil {
			return err
		}
	}
	keyTarget30, fieldTarget31, err := fieldsTarget1.StartField("U64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget32, err := fieldTarget31.StartMap(__VDLTypedb_objects27, len(m.U64))
		if err != nil {
			return err
		}
		for key34, value36 := range m.U64 {
			keyTarget33, err := mapTarget32.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget33.FromUint(uint64(key34), vdl.Uint64Type); err != nil {
				return err
			}
			valueTarget35, err := mapTarget32.FinishKeyStartField(keyTarget33)
			if err != nil {
				return err
			}
			if err := valueTarget35.FromString(string(value36), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget32.FinishField(keyTarget33, valueTarget35); err != nil {
				return err
			}
		}
		if err := fieldTarget31.FinishMap(mapTarget32); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget30, fieldTarget31); err != nil {
			return err
		}
	}
	keyTarget37, fieldTarget38, err := fieldsTarget1.StartField("I16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget39, err := fieldTarget38.StartMap(__VDLTypedb_objects28, len(m.I16))
		if err != nil {
			return err
		}
		for key41, value43 := range m.I16 {
			keyTarget40, err := mapTarget39.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget40.FromInt(int64(key41), vdl.Int16Type); err != nil {
				return err
			}
			valueTarget42, err := mapTarget39.FinishKeyStartField(keyTarget40)
			if err != nil {
				return err
			}
			if err := valueTarget42.FromString(string(value43), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget39.FinishField(keyTarget40, valueTarget42); err != nil {
				return err
			}
		}
		if err := fieldTarget38.FinishMap(mapTarget39); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget37, fieldTarget38); err != nil {
			return err
		}
	}
	keyTarget44, fieldTarget45, err := fieldsTarget1.StartField("I32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget46, err := fieldTarget45.StartMap(__VDLTypedb_objects29, len(m.I32))
		if err != nil {
			return err
		}
		for key48, value50 := range m.I32 {
			keyTarget47, err := mapTarget46.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget47.FromInt(int64(key48), vdl.Int32Type); err != nil {
				return err
			}
			valueTarget49, err := mapTarget46.FinishKeyStartField(keyTarget47)
			if err != nil {
				return err
			}
			if err := valueTarget49.FromString(string(value50), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget46.FinishField(keyTarget47, valueTarget49); err != nil {
				return err
			}
		}
		if err := fieldTarget45.FinishMap(mapTarget46); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget44, fieldTarget45); err != nil {
			return err
		}
	}
	keyTarget51, fieldTarget52, err := fieldsTarget1.StartField("I64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget53, err := fieldTarget52.StartMap(__VDLTypedb_objects30, len(m.I64))
		if err != nil {
			return err
		}
		for key55, value57 := range m.I64 {
			keyTarget54, err := mapTarget53.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget54.FromInt(int64(key55), vdl.Int64Type); err != nil {
				return err
			}
			valueTarget56, err := mapTarget53.FinishKeyStartField(keyTarget54)
			if err != nil {
				return err
			}
			if err := valueTarget56.FromString(string(value57), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget53.FinishField(keyTarget54, valueTarget56); err != nil {
				return err
			}
		}
		if err := fieldTarget52.FinishMap(mapTarget53); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget51, fieldTarget52); err != nil {
			return err
		}
	}
	keyTarget58, fieldTarget59, err := fieldsTarget1.StartField("F32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget60, err := fieldTarget59.StartMap(__VDLTypedb_objects31, len(m.F32))
		if err != nil {
			return err
		}
		for key62, value64 := range m.F32 {
			keyTarget61, err := mapTarget60.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget61.FromFloat(float64(key62), vdl.Float32Type); err != nil {
				return err
			}
			valueTarget63, err := mapTarget60.FinishKeyStartField(keyTarget61)
			if err != nil {
				return err
			}
			if err := valueTarget63.FromString(string(value64), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget60.FinishField(keyTarget61, valueTarget63); err != nil {
				return err
			}
		}
		if err := fieldTarget59.FinishMap(mapTarget60); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget58, fieldTarget59); err != nil {
			return err
		}
	}
	keyTarget65, fieldTarget66, err := fieldsTarget1.StartField("F64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget67, err := fieldTarget66.StartMap(__VDLTypedb_objects32, len(m.F64))
		if err != nil {
			return err
		}
		for key69, value71 := range m.F64 {
			keyTarget68, err := mapTarget67.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget68.FromFloat(float64(key69), vdl.Float64Type); err != nil {
				return err
			}
			valueTarget70, err := mapTarget67.FinishKeyStartField(keyTarget68)
			if err != nil {
				return err
			}
			if err := valueTarget70.FromString(string(value71), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget67.FinishField(keyTarget68, valueTarget70); err != nil {
				return err
			}
		}
		if err := fieldTarget66.FinishMap(mapTarget67); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget65, fieldTarget66); err != nil {
			return err
		}
	}
	keyTarget72, fieldTarget73, err := fieldsTarget1.StartField("C64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget74, err := fieldTarget73.StartMap(__VDLTypedb_objects33, len(m.C64))
		if err != nil {
			return err
		}
		for key76, value78 := range m.C64 {
			keyTarget75, err := mapTarget74.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget75.FromComplex(complex128(key76), vdl.Complex64Type); err != nil {
				return err
			}
			valueTarget77, err := mapTarget74.FinishKeyStartField(keyTarget75)
			if err != nil {
				return err
			}
			if err := valueTarget77.FromString(string(value78), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget74.FinishField(keyTarget75, valueTarget77); err != nil {
				return err
			}
		}
		if err := fieldTarget73.FinishMap(mapTarget74); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget72, fieldTarget73); err != nil {
			return err
		}
	}
	keyTarget79, fieldTarget80, err := fieldsTarget1.StartField("C128")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget81, err := fieldTarget80.StartMap(__VDLTypedb_objects34, len(m.C128))
		if err != nil {
			return err
		}
		for key83, value85 := range m.C128 {
			keyTarget82, err := mapTarget81.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget82.FromComplex(complex128(key83), vdl.Complex128Type); err != nil {
				return err
			}
			valueTarget84, err := mapTarget81.FinishKeyStartField(keyTarget82)
			if err != nil {
				return err
			}
			if err := valueTarget84.FromString(string(value85), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget81.FinishField(keyTarget82, valueTarget84); err != nil {
				return err
			}
		}
		if err := fieldTarget80.FinishMap(mapTarget81); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget79, fieldTarget80); err != nil {
			return err
		}
	}
	keyTarget86, fieldTarget87, err := fieldsTarget1.StartField("S")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget88, err := fieldTarget87.StartMap(__VDLTypedb_objects35, len(m.S))
		if err != nil {
			return err
		}
		for key90, value92 := range m.S {
			keyTarget89, err := mapTarget88.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget89.FromString(string(key90), vdl.StringType); err != nil {
				return err
			}
			valueTarget91, err := mapTarget88.FinishKeyStartField(keyTarget89)
			if err != nil {
				return err
			}
			if err := valueTarget91.FromString(string(value92), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget88.FinishField(keyTarget89, valueTarget91); err != nil {
				return err
			}
		}
		if err := fieldTarget87.FinishMap(mapTarget88); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget86, fieldTarget87); err != nil {
			return err
		}
	}
	keyTarget93, fieldTarget94, err := fieldsTarget1.StartField("Ms")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget95, err := fieldTarget94.StartMap(__VDLTypedb_objects36, len(m.Ms))
		if err != nil {
			return err
		}
		for key97, value99 := range m.Ms {
			keyTarget96, err := mapTarget95.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget96.FromString(string(key97), vdl.StringType); err != nil {
				return err
			}
			valueTarget98, err := mapTarget95.FinishKeyStartField(keyTarget96)
			if err != nil {
				return err
			}

			mapTarget100, err := valueTarget98.StartMap(__VDLTypedb_objects35, len(value99))
			if err != nil {
				return err
			}
			for key102, value104 := range value99 {
				keyTarget101, err := mapTarget100.StartKey()
				if err != nil {
					return err
				}
				if err := keyTarget101.FromString(string(key102), vdl.StringType); err != nil {
					return err
				}
				valueTarget103, err := mapTarget100.FinishKeyStartField(keyTarget101)
				if err != nil {
					return err
				}
				if err := valueTarget103.FromString(string(value104), vdl.StringType); err != nil {
					return err
				}
				if err := mapTarget100.FinishField(keyTarget101, valueTarget103); err != nil {
					return err
				}
			}
			if err := valueTarget98.FinishMap(mapTarget100); err != nil {
				return err
			}
			if err := mapTarget95.FinishField(keyTarget96, valueTarget98); err != nil {
				return err
			}
		}
		if err := fieldTarget94.FinishMap(mapTarget95); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget93, fieldTarget94); err != nil {
			return err
		}
	}
	keyTarget105, fieldTarget106, err := fieldsTarget1.StartField("T")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		mapTarget107, err := fieldTarget106.StartMap(__VDLTypedb_objects37, len(m.T))
		if err != nil {
			return err
		}
		for key109, value111 := range m.T {
			keyTarget108, err := mapTarget107.StartKey()
			if err != nil {
				return err
			}

			var wireValue112 time_2.Time
			if err := time_2.TimeFromNative(&wireValue112, key109); err != nil {
				return err
			}

			if err := wireValue112.FillVDLTarget(keyTarget108, __VDLType_db_objects_time_Time); err != nil {
				return err
			}
			valueTarget110, err := mapTarget107.FinishKeyStartField(keyTarget108)
			if err != nil {
				return err
			}
			if err := valueTarget110.FromString(string(value111), vdl.StringType); err != nil {
				return err
			}
			if err := mapTarget107.FinishField(keyTarget108, valueTarget110); err != nil {
				return err
			}
		}
		if err := fieldTarget106.FinishMap(mapTarget107); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget105, fieldTarget106); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *ManyMaps) MakeVDLTarget() vdl.Target {
	return nil
}

type ManySets struct {
	B    map[bool]struct{}
	By   map[byte]struct{}
	U16  map[uint16]struct{}
	U32  map[uint32]struct{}
	U64  map[uint64]struct{}
	I16  map[int16]struct{}
	I32  map[int32]struct{}
	I64  map[int64]struct{}
	F32  map[float32]struct{}
	F64  map[float64]struct{}
	C64  map[complex64]struct{}
	C128 map[complex128]struct{}
	S    map[string]struct{}
	T    map[time.Time]struct{}
}

func (ManySets) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.ManySets"`
}) {
}

func (m *ManySets) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	__VDLEnsureNativeBuilt_db_objects()
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget4, err := fieldTarget3.StartSet(__VDLTypedb_objects39, len(m.B))
		if err != nil {
			return err
		}
		for key6 := range m.B {
			keyTarget5, err := setTarget4.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget5.FromBool(bool(key6), vdl.BoolType); err != nil {
				return err
			}
			if err := setTarget4.FinishKey(keyTarget5); err != nil {
				return err
			}
		}
		if err := fieldTarget3.FinishSet(setTarget4); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget7, fieldTarget8, err := fieldsTarget1.StartField("By")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget9, err := fieldTarget8.StartSet(__VDLTypedb_objects40, len(m.By))
		if err != nil {
			return err
		}
		for key11 := range m.By {
			keyTarget10, err := setTarget9.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget10.FromUint(uint64(key11), vdl.ByteType); err != nil {
				return err
			}
			if err := setTarget9.FinishKey(keyTarget10); err != nil {
				return err
			}
		}
		if err := fieldTarget8.FinishSet(setTarget9); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget7, fieldTarget8); err != nil {
			return err
		}
	}
	keyTarget12, fieldTarget13, err := fieldsTarget1.StartField("U16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget14, err := fieldTarget13.StartSet(__VDLTypedb_objects41, len(m.U16))
		if err != nil {
			return err
		}
		for key16 := range m.U16 {
			keyTarget15, err := setTarget14.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget15.FromUint(uint64(key16), vdl.Uint16Type); err != nil {
				return err
			}
			if err := setTarget14.FinishKey(keyTarget15); err != nil {
				return err
			}
		}
		if err := fieldTarget13.FinishSet(setTarget14); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget12, fieldTarget13); err != nil {
			return err
		}
	}
	keyTarget17, fieldTarget18, err := fieldsTarget1.StartField("U32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget19, err := fieldTarget18.StartSet(__VDLTypedb_objects42, len(m.U32))
		if err != nil {
			return err
		}
		for key21 := range m.U32 {
			keyTarget20, err := setTarget19.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget20.FromUint(uint64(key21), vdl.Uint32Type); err != nil {
				return err
			}
			if err := setTarget19.FinishKey(keyTarget20); err != nil {
				return err
			}
		}
		if err := fieldTarget18.FinishSet(setTarget19); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget17, fieldTarget18); err != nil {
			return err
		}
	}
	keyTarget22, fieldTarget23, err := fieldsTarget1.StartField("U64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget24, err := fieldTarget23.StartSet(__VDLTypedb_objects43, len(m.U64))
		if err != nil {
			return err
		}
		for key26 := range m.U64 {
			keyTarget25, err := setTarget24.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget25.FromUint(uint64(key26), vdl.Uint64Type); err != nil {
				return err
			}
			if err := setTarget24.FinishKey(keyTarget25); err != nil {
				return err
			}
		}
		if err := fieldTarget23.FinishSet(setTarget24); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget22, fieldTarget23); err != nil {
			return err
		}
	}
	keyTarget27, fieldTarget28, err := fieldsTarget1.StartField("I16")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget29, err := fieldTarget28.StartSet(__VDLTypedb_objects44, len(m.I16))
		if err != nil {
			return err
		}
		for key31 := range m.I16 {
			keyTarget30, err := setTarget29.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget30.FromInt(int64(key31), vdl.Int16Type); err != nil {
				return err
			}
			if err := setTarget29.FinishKey(keyTarget30); err != nil {
				return err
			}
		}
		if err := fieldTarget28.FinishSet(setTarget29); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget27, fieldTarget28); err != nil {
			return err
		}
	}
	keyTarget32, fieldTarget33, err := fieldsTarget1.StartField("I32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget34, err := fieldTarget33.StartSet(__VDLTypedb_objects45, len(m.I32))
		if err != nil {
			return err
		}
		for key36 := range m.I32 {
			keyTarget35, err := setTarget34.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget35.FromInt(int64(key36), vdl.Int32Type); err != nil {
				return err
			}
			if err := setTarget34.FinishKey(keyTarget35); err != nil {
				return err
			}
		}
		if err := fieldTarget33.FinishSet(setTarget34); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget32, fieldTarget33); err != nil {
			return err
		}
	}
	keyTarget37, fieldTarget38, err := fieldsTarget1.StartField("I64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget39, err := fieldTarget38.StartSet(__VDLTypedb_objects46, len(m.I64))
		if err != nil {
			return err
		}
		for key41 := range m.I64 {
			keyTarget40, err := setTarget39.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget40.FromInt(int64(key41), vdl.Int64Type); err != nil {
				return err
			}
			if err := setTarget39.FinishKey(keyTarget40); err != nil {
				return err
			}
		}
		if err := fieldTarget38.FinishSet(setTarget39); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget37, fieldTarget38); err != nil {
			return err
		}
	}
	keyTarget42, fieldTarget43, err := fieldsTarget1.StartField("F32")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget44, err := fieldTarget43.StartSet(__VDLTypedb_objects47, len(m.F32))
		if err != nil {
			return err
		}
		for key46 := range m.F32 {
			keyTarget45, err := setTarget44.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget45.FromFloat(float64(key46), vdl.Float32Type); err != nil {
				return err
			}
			if err := setTarget44.FinishKey(keyTarget45); err != nil {
				return err
			}
		}
		if err := fieldTarget43.FinishSet(setTarget44); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget42, fieldTarget43); err != nil {
			return err
		}
	}
	keyTarget47, fieldTarget48, err := fieldsTarget1.StartField("F64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget49, err := fieldTarget48.StartSet(__VDLTypedb_objects48, len(m.F64))
		if err != nil {
			return err
		}
		for key51 := range m.F64 {
			keyTarget50, err := setTarget49.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget50.FromFloat(float64(key51), vdl.Float64Type); err != nil {
				return err
			}
			if err := setTarget49.FinishKey(keyTarget50); err != nil {
				return err
			}
		}
		if err := fieldTarget48.FinishSet(setTarget49); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget47, fieldTarget48); err != nil {
			return err
		}
	}
	keyTarget52, fieldTarget53, err := fieldsTarget1.StartField("C64")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget54, err := fieldTarget53.StartSet(__VDLTypedb_objects49, len(m.C64))
		if err != nil {
			return err
		}
		for key56 := range m.C64 {
			keyTarget55, err := setTarget54.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget55.FromComplex(complex128(key56), vdl.Complex64Type); err != nil {
				return err
			}
			if err := setTarget54.FinishKey(keyTarget55); err != nil {
				return err
			}
		}
		if err := fieldTarget53.FinishSet(setTarget54); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget52, fieldTarget53); err != nil {
			return err
		}
	}
	keyTarget57, fieldTarget58, err := fieldsTarget1.StartField("C128")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget59, err := fieldTarget58.StartSet(__VDLTypedb_objects50, len(m.C128))
		if err != nil {
			return err
		}
		for key61 := range m.C128 {
			keyTarget60, err := setTarget59.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget60.FromComplex(complex128(key61), vdl.Complex128Type); err != nil {
				return err
			}
			if err := setTarget59.FinishKey(keyTarget60); err != nil {
				return err
			}
		}
		if err := fieldTarget58.FinishSet(setTarget59); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget57, fieldTarget58); err != nil {
			return err
		}
	}
	keyTarget62, fieldTarget63, err := fieldsTarget1.StartField("S")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget64, err := fieldTarget63.StartSet(__VDLTypedb_objects20, len(m.S))
		if err != nil {
			return err
		}
		for key66 := range m.S {
			keyTarget65, err := setTarget64.StartKey()
			if err != nil {
				return err
			}
			if err := keyTarget65.FromString(string(key66), vdl.StringType); err != nil {
				return err
			}
			if err := setTarget64.FinishKey(keyTarget65); err != nil {
				return err
			}
		}
		if err := fieldTarget63.FinishSet(setTarget64); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget62, fieldTarget63); err != nil {
			return err
		}
	}
	keyTarget67, fieldTarget68, err := fieldsTarget1.StartField("T")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		setTarget69, err := fieldTarget68.StartSet(__VDLTypedb_objects51, len(m.T))
		if err != nil {
			return err
		}
		for key71 := range m.T {
			keyTarget70, err := setTarget69.StartKey()
			if err != nil {
				return err
			}

			var wireValue72 time_2.Time
			if err := time_2.TimeFromNative(&wireValue72, key71); err != nil {
				return err
			}

			if err := wireValue72.FillVDLTarget(keyTarget70, __VDLType_db_objects_time_Time); err != nil {
				return err
			}
			if err := setTarget69.FinishKey(keyTarget70); err != nil {
				return err
			}
		}
		if err := fieldTarget68.FinishSet(setTarget69); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget67, fieldTarget68); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *ManySets) MakeVDLTarget() vdl.Target {
	return nil
}

type BigData struct {
	Key string // A dup of the key stored in the value.
}

func (BigData) __VDLReflect(struct {
	Name string `vdl:"v.io/v23/query/engine/internal/testdata.BigData"`
}) {
}

func (m *BigData) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BigData == nil || __VDLTypedb_objects52 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Key")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Key), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *BigData) MakeVDLTarget() vdl.Target {
	return nil
}

func init() {
	vdl.Register((*AddressInfo)(nil))
	vdl.Register((*CreditAgency)(nil))
	vdl.Register((*ExperianRating)(nil))
	vdl.Register((*RatingsArray)(nil))
	vdl.Register((*EquifaxCreditReport)(nil))
	vdl.Register((*Tdh)(nil))
	vdl.Register((*ExperianCreditReport)(nil))
	vdl.Register((*TransUnionCreditReport)(nil))
	vdl.Register((*AgencyReport)(nil))
	vdl.Register((*CreditReport)(nil))
	vdl.Register((*Customer)(nil))
	vdl.Register((*Invoice)(nil))
	vdl.Register((*Numbers)(nil))
	vdl.Register((*FooType)(nil))
	vdl.Register((*BarType)(nil))
	vdl.Register((*TitleOrValueType)(nil))
	vdl.Register((*BazType)(nil))
	vdl.Register((*K)(nil))
	vdl.Register((*V)(nil))
	vdl.Register((*FunWithMaps)(nil))
	vdl.Register((*FunWithTypes)(nil))
	vdl.Register((*ManyMaps)(nil))
	vdl.Register((*ManySets)(nil))
	vdl.Register((*BigData)(nil))
}

var __VDLTypedb_objects0 *vdl.Type = vdl.TypeOf((*AddressInfo)(nil))
var __VDLTypedb_objects12 *vdl.Type = vdl.TypeOf((*BarType)(nil))
var __VDLTypedb_objects13 *vdl.Type = vdl.TypeOf((*BazType)(nil))
var __VDLTypedb_objects52 *vdl.Type = vdl.TypeOf((*BigData)(nil))
var __VDLTypedb_objects6 *vdl.Type = vdl.TypeOf((*CreditReport)(nil))
var __VDLTypedb_objects7 *vdl.Type = vdl.TypeOf((*Customer)(nil))
var __VDLTypedb_objects1 *vdl.Type = vdl.TypeOf((*EquifaxCreditReport)(nil))
var __VDLTypedb_objects2 *vdl.Type = vdl.TypeOf((*ExperianCreditReport)(nil))
var __VDLTypedb_objects11 *vdl.Type = vdl.TypeOf((*FooType)(nil))
var __VDLTypedb_objects16 *vdl.Type = vdl.TypeOf((*FunWithMaps)(nil))
var __VDLTypedb_objects21 *vdl.Type = vdl.TypeOf((*FunWithTypes)(nil))
var __VDLTypedb_objects9 *vdl.Type

func __VDLTypedb_objects9_gen() *vdl.Type {
	__VDLTypedb_objects9Builder := vdl.TypeBuilder{}

	__VDLTypedb_objects91 := __VDLTypedb_objects9Builder.Optional()
	__VDLTypedb_objects92 := __VDLTypedb_objects9Builder.Struct()
	__VDLTypedb_objects93 := __VDLTypedb_objects9Builder.Named("v.io/v23/query/engine/internal/testdata.Invoice").AssignBase(__VDLTypedb_objects92)
	__VDLTypedb_objects94 := vdl.Int64Type
	__VDLTypedb_objects92.AppendField("CustId", __VDLTypedb_objects94)
	__VDLTypedb_objects92.AppendField("InvoiceNum", __VDLTypedb_objects94)
	__VDLTypedb_objects95 := __VDLTypedb_objects9Builder.Struct()
	__VDLTypedb_objects96 := __VDLTypedb_objects9Builder.Named("time.Time").AssignBase(__VDLTypedb_objects95)
	__VDLTypedb_objects95.AppendField("Seconds", __VDLTypedb_objects94)
	__VDLTypedb_objects97 := vdl.Int32Type
	__VDLTypedb_objects95.AppendField("Nanos", __VDLTypedb_objects97)
	__VDLTypedb_objects92.AppendField("InvoiceDate", __VDLTypedb_objects96)
	__VDLTypedb_objects92.AppendField("Amount", __VDLTypedb_objects94)
	__VDLTypedb_objects98 := __VDLTypedb_objects9Builder.Struct()
	__VDLTypedb_objects99 := __VDLTypedb_objects9Builder.Named("v.io/v23/query/engine/internal/testdata.AddressInfo").AssignBase(__VDLTypedb_objects98)
	__VDLTypedb_objects910 := vdl.StringType
	__VDLTypedb_objects98.AppendField("Street", __VDLTypedb_objects910)
	__VDLTypedb_objects98.AppendField("City", __VDLTypedb_objects910)
	__VDLTypedb_objects98.AppendField("State", __VDLTypedb_objects910)
	__VDLTypedb_objects98.AppendField("Zip", __VDLTypedb_objects910)
	__VDLTypedb_objects92.AppendField("ShipTo", __VDLTypedb_objects99)
	__VDLTypedb_objects91.AssignElem(__VDLTypedb_objects93)
	__VDLTypedb_objects9Builder.Build()
	__VDLTypedb_objects9v, err := __VDLTypedb_objects91.Built()
	if err != nil {
		panic(err)
	}
	return __VDLTypedb_objects9v
}
func init() {
	__VDLTypedb_objects9 = __VDLTypedb_objects9_gen()
}

var __VDLTypedb_objects14 *vdl.Type = vdl.TypeOf((*K)(nil))
var __VDLTypedb_objects22 *vdl.Type

func __VDLTypedb_objects22_gen() *vdl.Type {
	__VDLTypedb_objects22Builder := vdl.TypeBuilder{}

	__VDLTypedb_objects221 := __VDLTypedb_objects22Builder.Optional()
	__VDLTypedb_objects222 := __VDLTypedb_objects22Builder.Struct()
	__VDLTypedb_objects223 := __VDLTypedb_objects22Builder.Named("v.io/v23/query/engine/internal/testdata.ManyMaps").AssignBase(__VDLTypedb_objects222)
	__VDLTypedb_objects224 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects225 := vdl.BoolType
	__VDLTypedb_objects224.AssignKey(__VDLTypedb_objects225)
	__VDLTypedb_objects226 := vdl.StringType
	__VDLTypedb_objects224.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("B", __VDLTypedb_objects224)
	__VDLTypedb_objects227 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects228 := vdl.ByteType
	__VDLTypedb_objects227.AssignKey(__VDLTypedb_objects228)
	__VDLTypedb_objects227.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("By", __VDLTypedb_objects227)
	__VDLTypedb_objects229 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2210 := vdl.Uint16Type
	__VDLTypedb_objects229.AssignKey(__VDLTypedb_objects2210)
	__VDLTypedb_objects229.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("U16", __VDLTypedb_objects229)
	__VDLTypedb_objects2211 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2212 := vdl.Uint32Type
	__VDLTypedb_objects2211.AssignKey(__VDLTypedb_objects2212)
	__VDLTypedb_objects2211.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("U32", __VDLTypedb_objects2211)
	__VDLTypedb_objects2213 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2214 := vdl.Uint64Type
	__VDLTypedb_objects2213.AssignKey(__VDLTypedb_objects2214)
	__VDLTypedb_objects2213.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("U64", __VDLTypedb_objects2213)
	__VDLTypedb_objects2215 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2216 := vdl.Int16Type
	__VDLTypedb_objects2215.AssignKey(__VDLTypedb_objects2216)
	__VDLTypedb_objects2215.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("I16", __VDLTypedb_objects2215)
	__VDLTypedb_objects2217 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2218 := vdl.Int32Type
	__VDLTypedb_objects2217.AssignKey(__VDLTypedb_objects2218)
	__VDLTypedb_objects2217.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("I32", __VDLTypedb_objects2217)
	__VDLTypedb_objects2219 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2220 := vdl.Int64Type
	__VDLTypedb_objects2219.AssignKey(__VDLTypedb_objects2220)
	__VDLTypedb_objects2219.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("I64", __VDLTypedb_objects2219)
	__VDLTypedb_objects2221 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2222 := vdl.Float32Type
	__VDLTypedb_objects2221.AssignKey(__VDLTypedb_objects2222)
	__VDLTypedb_objects2221.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("F32", __VDLTypedb_objects2221)
	__VDLTypedb_objects2223 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2224 := vdl.Float64Type
	__VDLTypedb_objects2223.AssignKey(__VDLTypedb_objects2224)
	__VDLTypedb_objects2223.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("F64", __VDLTypedb_objects2223)
	__VDLTypedb_objects2225 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2226 := vdl.Complex64Type
	__VDLTypedb_objects2225.AssignKey(__VDLTypedb_objects2226)
	__VDLTypedb_objects2225.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("C64", __VDLTypedb_objects2225)
	__VDLTypedb_objects2227 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2228 := vdl.Complex128Type
	__VDLTypedb_objects2227.AssignKey(__VDLTypedb_objects2228)
	__VDLTypedb_objects2227.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("C128", __VDLTypedb_objects2227)
	__VDLTypedb_objects2229 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2229.AssignKey(__VDLTypedb_objects226)
	__VDLTypedb_objects2229.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("S", __VDLTypedb_objects2229)
	__VDLTypedb_objects2230 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2230.AssignKey(__VDLTypedb_objects226)
	__VDLTypedb_objects2230.AssignElem(__VDLTypedb_objects2229)
	__VDLTypedb_objects222.AppendField("Ms", __VDLTypedb_objects2230)
	__VDLTypedb_objects2231 := __VDLTypedb_objects22Builder.Map()
	__VDLTypedb_objects2232 := __VDLTypedb_objects22Builder.Struct()
	__VDLTypedb_objects2233 := __VDLTypedb_objects22Builder.Named("time.Time").AssignBase(__VDLTypedb_objects2232)
	__VDLTypedb_objects2232.AppendField("Seconds", __VDLTypedb_objects2220)
	__VDLTypedb_objects2232.AppendField("Nanos", __VDLTypedb_objects2218)
	__VDLTypedb_objects2231.AssignKey(__VDLTypedb_objects2233)
	__VDLTypedb_objects2231.AssignElem(__VDLTypedb_objects226)
	__VDLTypedb_objects222.AppendField("T", __VDLTypedb_objects2231)
	__VDLTypedb_objects221.AssignElem(__VDLTypedb_objects223)
	__VDLTypedb_objects22Builder.Build()
	__VDLTypedb_objects22v, err := __VDLTypedb_objects221.Built()
	if err != nil {
		panic(err)
	}
	return __VDLTypedb_objects22v
}
func init() {
	__VDLTypedb_objects22 = __VDLTypedb_objects22_gen()
}

var __VDLTypedb_objects38 *vdl.Type

func __VDLTypedb_objects38_gen() *vdl.Type {
	__VDLTypedb_objects38Builder := vdl.TypeBuilder{}

	__VDLTypedb_objects381 := __VDLTypedb_objects38Builder.Optional()
	__VDLTypedb_objects382 := __VDLTypedb_objects38Builder.Struct()
	__VDLTypedb_objects383 := __VDLTypedb_objects38Builder.Named("v.io/v23/query/engine/internal/testdata.ManySets").AssignBase(__VDLTypedb_objects382)
	__VDLTypedb_objects384 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects385 := vdl.BoolType
	__VDLTypedb_objects384.AssignKey(__VDLTypedb_objects385)
	__VDLTypedb_objects382.AppendField("B", __VDLTypedb_objects384)
	__VDLTypedb_objects386 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects387 := vdl.ByteType
	__VDLTypedb_objects386.AssignKey(__VDLTypedb_objects387)
	__VDLTypedb_objects382.AppendField("By", __VDLTypedb_objects386)
	__VDLTypedb_objects388 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects389 := vdl.Uint16Type
	__VDLTypedb_objects388.AssignKey(__VDLTypedb_objects389)
	__VDLTypedb_objects382.AppendField("U16", __VDLTypedb_objects388)
	__VDLTypedb_objects3810 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3811 := vdl.Uint32Type
	__VDLTypedb_objects3810.AssignKey(__VDLTypedb_objects3811)
	__VDLTypedb_objects382.AppendField("U32", __VDLTypedb_objects3810)
	__VDLTypedb_objects3812 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3813 := vdl.Uint64Type
	__VDLTypedb_objects3812.AssignKey(__VDLTypedb_objects3813)
	__VDLTypedb_objects382.AppendField("U64", __VDLTypedb_objects3812)
	__VDLTypedb_objects3814 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3815 := vdl.Int16Type
	__VDLTypedb_objects3814.AssignKey(__VDLTypedb_objects3815)
	__VDLTypedb_objects382.AppendField("I16", __VDLTypedb_objects3814)
	__VDLTypedb_objects3816 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3817 := vdl.Int32Type
	__VDLTypedb_objects3816.AssignKey(__VDLTypedb_objects3817)
	__VDLTypedb_objects382.AppendField("I32", __VDLTypedb_objects3816)
	__VDLTypedb_objects3818 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3819 := vdl.Int64Type
	__VDLTypedb_objects3818.AssignKey(__VDLTypedb_objects3819)
	__VDLTypedb_objects382.AppendField("I64", __VDLTypedb_objects3818)
	__VDLTypedb_objects3820 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3821 := vdl.Float32Type
	__VDLTypedb_objects3820.AssignKey(__VDLTypedb_objects3821)
	__VDLTypedb_objects382.AppendField("F32", __VDLTypedb_objects3820)
	__VDLTypedb_objects3822 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3823 := vdl.Float64Type
	__VDLTypedb_objects3822.AssignKey(__VDLTypedb_objects3823)
	__VDLTypedb_objects382.AppendField("F64", __VDLTypedb_objects3822)
	__VDLTypedb_objects3824 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3825 := vdl.Complex64Type
	__VDLTypedb_objects3824.AssignKey(__VDLTypedb_objects3825)
	__VDLTypedb_objects382.AppendField("C64", __VDLTypedb_objects3824)
	__VDLTypedb_objects3826 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3827 := vdl.Complex128Type
	__VDLTypedb_objects3826.AssignKey(__VDLTypedb_objects3827)
	__VDLTypedb_objects382.AppendField("C128", __VDLTypedb_objects3826)
	__VDLTypedb_objects3828 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3829 := vdl.StringType
	__VDLTypedb_objects3828.AssignKey(__VDLTypedb_objects3829)
	__VDLTypedb_objects382.AppendField("S", __VDLTypedb_objects3828)
	__VDLTypedb_objects3830 := __VDLTypedb_objects38Builder.Set()
	__VDLTypedb_objects3831 := __VDLTypedb_objects38Builder.Struct()
	__VDLTypedb_objects3832 := __VDLTypedb_objects38Builder.Named("time.Time").AssignBase(__VDLTypedb_objects3831)
	__VDLTypedb_objects3831.AppendField("Seconds", __VDLTypedb_objects3819)
	__VDLTypedb_objects3831.AppendField("Nanos", __VDLTypedb_objects3817)
	__VDLTypedb_objects3830.AssignKey(__VDLTypedb_objects3832)
	__VDLTypedb_objects382.AppendField("T", __VDLTypedb_objects3830)
	__VDLTypedb_objects381.AssignElem(__VDLTypedb_objects383)
	__VDLTypedb_objects38Builder.Build()
	__VDLTypedb_objects38v, err := __VDLTypedb_objects381.Built()
	if err != nil {
		panic(err)
	}
	return __VDLTypedb_objects38v
}
func init() {
	__VDLTypedb_objects38 = __VDLTypedb_objects38_gen()
}

var __VDLTypedb_objects10 *vdl.Type = vdl.TypeOf((*Numbers)(nil))
var __VDLTypedb_objects4 *vdl.Type = vdl.TypeOf((*TransUnionCreditReport)(nil))
var __VDLTypedb_objects15 *vdl.Type = vdl.TypeOf((*V)(nil))
var __VDLTypedb_objects19 *vdl.Type = vdl.TypeOf([]map[string]struct{}(nil))
var __VDLTypedb_objects8 *vdl.Type = vdl.TypeOf([]AddressInfo(nil))
var __VDLTypedb_objects23 *vdl.Type = vdl.TypeOf(map[bool]string(nil))
var __VDLTypedb_objects24 *vdl.Type = vdl.TypeOf(map[byte]string(nil))
var __VDLTypedb_objects34 *vdl.Type = vdl.TypeOf(map[complex128]string(nil))
var __VDLTypedb_objects33 *vdl.Type = vdl.TypeOf(map[complex64]string(nil))
var __VDLTypedb_objects31 *vdl.Type = vdl.TypeOf(map[float32]string(nil))
var __VDLTypedb_objects32 *vdl.Type = vdl.TypeOf(map[float64]string(nil))
var __VDLTypedb_objects18 *vdl.Type = vdl.TypeOf(map[int16][]map[string]struct{}(nil))
var __VDLTypedb_objects28 *vdl.Type = vdl.TypeOf(map[int16]string(nil))
var __VDLTypedb_objects29 *vdl.Type = vdl.TypeOf(map[int32]string(nil))
var __VDLTypedb_objects30 *vdl.Type = vdl.TypeOf(map[int64]string(nil))
var __VDLTypedb_objects5 *vdl.Type = vdl.TypeOf(map[string]int16(nil))
var __VDLTypedb_objects36 *vdl.Type = vdl.TypeOf(map[string]map[string]string(nil))
var __VDLTypedb_objects35 *vdl.Type = vdl.TypeOf(map[string]string(nil))
var __VDLTypedb_objects37 *vdl.Type

func __VDLTypedb_objects37_gen() *vdl.Type {
	__VDLTypedb_objects37Builder := vdl.TypeBuilder{}

	__VDLTypedb_objects371 := __VDLTypedb_objects37Builder.Map()
	__VDLTypedb_objects372 := __VDLTypedb_objects37Builder.Struct()
	__VDLTypedb_objects373 := __VDLTypedb_objects37Builder.Named("time.Time").AssignBase(__VDLTypedb_objects372)
	__VDLTypedb_objects374 := vdl.Int64Type
	__VDLTypedb_objects372.AppendField("Seconds", __VDLTypedb_objects374)
	__VDLTypedb_objects375 := vdl.Int32Type
	__VDLTypedb_objects372.AppendField("Nanos", __VDLTypedb_objects375)
	__VDLTypedb_objects371.AssignKey(__VDLTypedb_objects373)
	__VDLTypedb_objects376 := vdl.StringType
	__VDLTypedb_objects371.AssignElem(__VDLTypedb_objects376)
	__VDLTypedb_objects37Builder.Build()
	__VDLTypedb_objects37v, err := __VDLTypedb_objects371.Built()
	if err != nil {
		panic(err)
	}
	return __VDLTypedb_objects37v
}
func init() {
	__VDLTypedb_objects37 = __VDLTypedb_objects37_gen()
}

var __VDLTypedb_objects25 *vdl.Type = vdl.TypeOf(map[uint16]string(nil))
var __VDLTypedb_objects26 *vdl.Type = vdl.TypeOf(map[uint32]string(nil))
var __VDLTypedb_objects27 *vdl.Type = vdl.TypeOf(map[uint64]string(nil))
var __VDLTypedb_objects17 *vdl.Type = vdl.TypeOf(map[K]V(nil))
var __VDLTypedb_objects39 *vdl.Type = vdl.TypeOf(map[bool]struct{}(nil))
var __VDLTypedb_objects40 *vdl.Type = vdl.TypeOf(map[byte]struct{}(nil))
var __VDLTypedb_objects50 *vdl.Type = vdl.TypeOf(map[complex128]struct{}(nil))
var __VDLTypedb_objects49 *vdl.Type = vdl.TypeOf(map[complex64]struct{}(nil))
var __VDLTypedb_objects47 *vdl.Type = vdl.TypeOf(map[float32]struct{}(nil))
var __VDLTypedb_objects48 *vdl.Type = vdl.TypeOf(map[float64]struct{}(nil))
var __VDLTypedb_objects44 *vdl.Type = vdl.TypeOf(map[int16]struct{}(nil))
var __VDLTypedb_objects45 *vdl.Type = vdl.TypeOf(map[int32]struct{}(nil))
var __VDLTypedb_objects46 *vdl.Type = vdl.TypeOf(map[int64]struct{}(nil))
var __VDLTypedb_objects20 *vdl.Type = vdl.TypeOf(map[string]struct{}(nil))
var __VDLTypedb_objects51 *vdl.Type

func __VDLTypedb_objects51_gen() *vdl.Type {
	__VDLTypedb_objects51Builder := vdl.TypeBuilder{}

	__VDLTypedb_objects511 := __VDLTypedb_objects51Builder.Set()
	__VDLTypedb_objects512 := __VDLTypedb_objects51Builder.Struct()
	__VDLTypedb_objects513 := __VDLTypedb_objects51Builder.Named("time.Time").AssignBase(__VDLTypedb_objects512)
	__VDLTypedb_objects514 := vdl.Int64Type
	__VDLTypedb_objects512.AppendField("Seconds", __VDLTypedb_objects514)
	__VDLTypedb_objects515 := vdl.Int32Type
	__VDLTypedb_objects512.AppendField("Nanos", __VDLTypedb_objects515)
	__VDLTypedb_objects511.AssignKey(__VDLTypedb_objects513)
	__VDLTypedb_objects51Builder.Build()
	__VDLTypedb_objects51v, err := __VDLTypedb_objects511.Built()
	if err != nil {
		panic(err)
	}
	return __VDLTypedb_objects51v
}
func init() {
	__VDLTypedb_objects51 = __VDLTypedb_objects51_gen()
}

var __VDLTypedb_objects41 *vdl.Type = vdl.TypeOf(map[uint16]struct{}(nil))
var __VDLTypedb_objects42 *vdl.Type = vdl.TypeOf(map[uint32]struct{}(nil))
var __VDLTypedb_objects43 *vdl.Type = vdl.TypeOf(map[uint64]struct{}(nil))
var __VDLTypedb_objects3 *vdl.Type = vdl.TypeOf(map[Tdh]struct{}(nil))
var __VDLType_db_objects_time_Time *vdl.Type

func __VDLType_db_objects_time_Time_gen() *vdl.Type {
	__VDLType_db_objects_time_TimeBuilder := vdl.TypeBuilder{}

	__VDLType_db_objects_time_Time1 := __VDLType_db_objects_time_TimeBuilder.Struct()
	__VDLType_db_objects_time_Time2 := __VDLType_db_objects_time_TimeBuilder.Named("time.Time").AssignBase(__VDLType_db_objects_time_Time1)
	__VDLType_db_objects_time_Time3 := vdl.Int64Type
	__VDLType_db_objects_time_Time1.AppendField("Seconds", __VDLType_db_objects_time_Time3)
	__VDLType_db_objects_time_Time4 := vdl.Int32Type
	__VDLType_db_objects_time_Time1.AppendField("Nanos", __VDLType_db_objects_time_Time4)
	__VDLType_db_objects_time_TimeBuilder.Build()
	__VDLType_db_objects_time_Timev, err := __VDLType_db_objects_time_Time2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_db_objects_time_Timev
}
func init() {
	__VDLType_db_objects_time_Time = __VDLType_db_objects_time_Time_gen()
}

var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AddressInfo *vdl.Type = vdl.TypeOf(AddressInfo{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_AgencyReport *vdl.Type = vdl.TypeOf(AgencyReport(AgencyReportEquifaxReport{EquifaxCreditReport{}}))
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BarType *vdl.Type = vdl.TypeOf(BarType{
	Baz: BazType{
		TitleOrValue: TitleOrValueTypeTitle{""},
	},
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BazType *vdl.Type = vdl.TypeOf(BazType{
	TitleOrValue: TitleOrValueTypeTitle{""},
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_BigData *vdl.Type = vdl.TypeOf(BigData{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditAgency *vdl.Type = vdl.TypeOf(CreditAgencyEquifax)
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_CreditReport *vdl.Type = vdl.TypeOf(CreditReport{
	Report: AgencyReportEquifaxReport{EquifaxCreditReport{}},
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Customer *vdl.Type = vdl.TypeOf(Customer{
	Credit: CreditReport{
		Report: AgencyReportEquifaxReport{EquifaxCreditReport{}},
	},
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_EquifaxCreditReport *vdl.Type = vdl.TypeOf(EquifaxCreditReport{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianCreditReport *vdl.Type = vdl.TypeOf(ExperianCreditReport{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ExperianRating *vdl.Type = vdl.TypeOf(ExperianRatingGood)
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FooType *vdl.Type = vdl.TypeOf(FooType{
	Bar: BarType{
		Baz: BazType{
			TitleOrValue: TitleOrValueTypeTitle{""},
		},
	},
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FunWithMaps *vdl.Type = vdl.TypeOf(FunWithMaps{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_FunWithTypes *vdl.Type = vdl.TypeOf(FunWithTypes{
	T1: vdl.AnyType,
	T2: vdl.AnyType,
})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice *vdl.Type

func __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice_gen() *vdl.Type {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder := vdl.TypeBuilder{}

	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice2 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Named("v.io/v23/query/engine/internal/testdata.Invoice").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice3 := vdl.Int64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1.AppendField("CustId", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1.AppendField("InvoiceNum", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice4 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice5 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Named("time.Time").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice4)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice4.AppendField("Seconds", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice6 := vdl.Int32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice4.AppendField("Nanos", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice6)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1.AppendField("InvoiceDate", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1.AppendField("Amount", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice8 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Named("v.io/v23/query/engine/internal/testdata.AddressInfo").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice9 := vdl.StringType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7.AppendField("Street", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7.AppendField("City", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7.AppendField("State", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice7.AppendField("Zip", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice1.AppendField("ShipTo", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice8)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_InvoiceBuilder.Build()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoicev, err := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoicev
}
func init() {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice_gen()
}

var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_K *vdl.Type = vdl.TypeOf(K{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps *vdl.Type

func __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps_gen() *vdl.Type {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder := vdl.TypeBuilder{}

	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps2 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Named("v.io/v23/query/engine/internal/testdata.ManyMaps").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps3 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps4 := vdl.BoolType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps3.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps4)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5 := vdl.StringType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps3.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("B", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps6 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps7 := vdl.ByteType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps6.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps7)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps6.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("By", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps6)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps8 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps9 := vdl.Uint16Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps8.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps8.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("U16", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps8)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps10 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps11 := vdl.Uint32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps10.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps11)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps10.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("U32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps10)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps12 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps13 := vdl.Uint64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps12.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps13)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps12.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("U64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps12)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps14 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps15 := vdl.Int16Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps14.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps15)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps14.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("I16", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps14)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps16 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps17 := vdl.Int32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps16.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps17)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps16.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("I32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps16)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps18 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps19 := vdl.Int64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps18.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps19)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps18.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("I64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps18)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps20 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps21 := vdl.Float32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps20.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps21)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps20.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("F32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps20)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps22 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps23 := vdl.Float64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps22.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps23)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps22.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("F64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps22)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps24 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps25 := vdl.Complex64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps24.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps25)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps24.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("C64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps24)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps26 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps27 := vdl.Complex128Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps26.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps27)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps26.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("C128", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps26)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps28 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps28.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps28.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("S", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps28)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps29 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps29.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps29.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps28)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("Ms", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps29)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps30 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Map()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps31 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps32 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Named("time.Time").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps31)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps31.AppendField("Seconds", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps19)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps31.AppendField("Nanos", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps17)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps30.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps32)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps30.AssignElem(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps1.AppendField("T", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps30)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsBuilder.Build()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsv, err := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMapsv
}
func init() {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps_gen()
}

var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets *vdl.Type

func __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets_gen() *vdl.Type {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder := vdl.TypeBuilder{}

	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets2 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Named("v.io/v23/query/engine/internal/testdata.ManySets").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets3 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets4 := vdl.BoolType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets3.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets4)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("B", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets3)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets5 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets6 := vdl.ByteType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets5.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets6)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("By", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets5)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets7 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets8 := vdl.Uint16Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets7.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets8)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("U16", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets7)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets9 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets10 := vdl.Uint32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets9.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets10)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("U32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets9)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets11 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets12 := vdl.Uint64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets11.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets12)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("U64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets11)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets13 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets14 := vdl.Int16Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets13.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets14)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("I16", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets13)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets15 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets16 := vdl.Int32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets15.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets16)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("I32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets15)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets17 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets18 := vdl.Int64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets17.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets18)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("I64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets17)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets19 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets20 := vdl.Float32Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets19.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets20)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("F32", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets19)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets21 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets22 := vdl.Float64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets21.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets22)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("F64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets21)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets23 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets24 := vdl.Complex64Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets23.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets24)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("C64", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets23)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets25 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets26 := vdl.Complex128Type
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets25.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets26)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("C128", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets25)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets27 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets28 := vdl.StringType
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets27.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets28)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("S", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets27)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets29 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Set()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets30 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Struct()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets31 := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Named("time.Time").AssignBase(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets30)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets30.AppendField("Seconds", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets18)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets30.AppendField("Nanos", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets16)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets29.AssignKey(__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets31)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets1.AppendField("T", __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets29)
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsBuilder.Build()
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsv, err := __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySetsv
}
func init() {
	__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets_gen()
}

var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Numbers *vdl.Type = vdl.TypeOf(Numbers{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_RatingsArray *vdl.Type = vdl.TypeOf(RatingsArray{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Tdh *vdl.Type = vdl.TypeOf(TdhTom)
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TitleOrValueType *vdl.Type = vdl.TypeOf(TitleOrValueType(TitleOrValueTypeTitle{""}))
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_TransUnionCreditReport *vdl.Type = vdl.TypeOf(TransUnionCreditReport{})
var __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_V *vdl.Type = vdl.TypeOf(V{})

func __VDLEnsureNativeBuilt_db_objects() {
	if __VDLTypedb_objects9 == nil {
		__VDLTypedb_objects9 = __VDLTypedb_objects9_gen()
	}
	if __VDLTypedb_objects22 == nil {
		__VDLTypedb_objects22 = __VDLTypedb_objects22_gen()
	}
	if __VDLTypedb_objects38 == nil {
		__VDLTypedb_objects38 = __VDLTypedb_objects38_gen()
	}
	if __VDLTypedb_objects37 == nil {
		__VDLTypedb_objects37 = __VDLTypedb_objects37_gen()
	}
	if __VDLTypedb_objects51 == nil {
		__VDLTypedb_objects51 = __VDLTypedb_objects51_gen()
	}
	if __VDLType_db_objects_time_Time == nil {
		__VDLType_db_objects_time_Time = __VDLType_db_objects_time_Time_gen()
	}
	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice == nil {
		__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_Invoice_gen()
	}
	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps == nil {
		__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManyMaps_gen()
	}
	if __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets == nil {
		__VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets = __VDLType_db_objects_v_io_v23_query_engine_internal_testdata_ManySets_gen()
	}
}
