pkg testdata, const BeanEnumBean BeanEnum
pkg testdata, const BrieEnumBrie BrieEnum
pkg testdata, const BrieEnumGlee BrieEnum
pkg testdata, const BrieEnumThree BrieEnum
pkg testdata, const FoodEnumBean FoodEnum
pkg testdata, const FoodEnumBrie FoodEnum
pkg testdata, const FoodEnumCherry FoodEnum
pkg testdata, const NEnumA NEnum
pkg testdata, const NEnumB NEnum
pkg testdata, const NEnumC NEnum
pkg testdata, func BeanEnumFromString(string) (BeanEnum, error)
pkg testdata, func BrieEnumFromString(string) (BrieEnum, error)
pkg testdata, func FoodEnumFromString(string) (FoodEnum, error)
pkg testdata, func NEnumFromString(string) (NEnum, error)
pkg testdata, method (*BeanEnum) Set(string) error
pkg testdata, method (*BrieEnum) Set(string) error
pkg testdata, method (*FoodEnum) Set(string) error
pkg testdata, method (*NEnum) Set(string) error
pkg testdata, method (BdeUnionB) Index() int
pkg testdata, method (BdeUnionB) Interface() interface{}
pkg testdata, method (BdeUnionB) Name() string
pkg testdata, method (BdeUnionD) Index() int
pkg testdata, method (BdeUnionD) Interface() interface{}
pkg testdata, method (BdeUnionD) Name() string
pkg testdata, method (BdeUnionE) Index() int
pkg testdata, method (BdeUnionE) Interface() interface{}
pkg testdata, method (BdeUnionE) Name() string
pkg testdata, method (BeanEnum) String() string
pkg testdata, method (BrieEnum) String() string
pkg testdata, method (FoodEnum) String() string
pkg testdata, method (NEnum) String() string
pkg testdata, method (NUnionA) Index() int
pkg testdata, method (NUnionA) Interface() interface{}
pkg testdata, method (NUnionA) Name() string
pkg testdata, method (NUnionB) Index() int
pkg testdata, method (NUnionB) Interface() interface{}
pkg testdata, method (NUnionB) Name() string
pkg testdata, method (NUnionC) Index() int
pkg testdata, method (NUnionC) Interface() interface{}
pkg testdata, method (NUnionC) Name() string
pkg testdata, type AbcStruct struct
pkg testdata, type AbcStruct struct, A bool
pkg testdata, type AbcStruct struct, B string
pkg testdata, type AbcStruct struct, C int64
pkg testdata, type AdeStruct struct
pkg testdata, type AdeStruct struct, A bool
pkg testdata, type AdeStruct struct, D *vdl.Value
pkg testdata, type AdeStruct struct, E *vdl.Type
pkg testdata, type Array3String [3]string
pkg testdata, type Array4String [4]string
pkg testdata, type BdeUnion interface, Index() int
pkg testdata, type BdeUnion interface, Interface() interface{}
pkg testdata, type BdeUnion interface, Name() string
pkg testdata, type BdeUnion interface, unexported methods
pkg testdata, type BdeUnionB struct
pkg testdata, type BdeUnionB struct, Value string
pkg testdata, type BdeUnionD struct
pkg testdata, type BdeUnionD struct, Value *vdl.Value
pkg testdata, type BdeUnionE struct
pkg testdata, type BdeUnionE struct, Value *vdl.Type
pkg testdata, type BeanEnum int
pkg testdata, type BrieEnum int
pkg testdata, type ConvertGroup struct
pkg testdata, type ConvertGroup struct, Name string
pkg testdata, type ConvertGroup struct, PrimaryType *vdl.Type
pkg testdata, type ConvertGroup struct, Values []*vdl.Value
pkg testdata, type FoodEnum int
pkg testdata, type ListString []string
pkg testdata, type MBool NBool
pkg testdata, type MList []NListUint64
pkg testdata, type MMap map[NFloat32]NListUint64
pkg testdata, type MStruct struct
pkg testdata, type MStruct struct, A bool
pkg testdata, type MStruct struct, B NBool
pkg testdata, type MStruct struct, C MBool
pkg testdata, type MStruct struct, D *NStruct
pkg testdata, type MStruct struct, E *vdl.Type
pkg testdata, type MStruct struct, F *vdl.Value
pkg testdata, type MapOnlyA map[uint32]uint32
pkg testdata, type MapOnlyA2 map[int64]float64
pkg testdata, type MapOnlyB map[bool]string
pkg testdata, type MapOnlyB2 map[NBool]NString
pkg testdata, type MapOnlySet map[float64]struct{}
pkg testdata, type MapOnlyStruct struct
pkg testdata, type MapOnlyStruct struct, Key1 int64
pkg testdata, type MapOnlyStruct struct, Key2 uint32
pkg testdata, type MapOnlyStruct struct, Key3 complex128
pkg testdata, type MapSetStruct struct
pkg testdata, type MapSetStruct struct, Eel bool
pkg testdata, type MapSetStruct struct, Feat bool
pkg testdata, type MapSetStruct struct, Tire bool
pkg testdata, type MapStructSet map[string]struct{}
pkg testdata, type NArray2Uint64 [2]uint64
pkg testdata, type NBool bool
pkg testdata, type NByte byte
pkg testdata, type NByteArray [4]byte
pkg testdata, type NByteSlice []byte
pkg testdata, type NComplex128 complex128
pkg testdata, type NComplex64 complex64
pkg testdata, type NEnum int
pkg testdata, type NFloat32 float32
pkg testdata, type NFloat64 float64
pkg testdata, type NInt16 int16
pkg testdata, type NInt32 int32
pkg testdata, type NInt64 int64
pkg testdata, type NListUint64 []uint64
pkg testdata, type NMapUint64String map[uint64]string
pkg testdata, type NSetUint64 map[uint64]struct{}
pkg testdata, type NString string
pkg testdata, type NStruct struct
pkg testdata, type NStruct struct, A bool
pkg testdata, type NStruct struct, B string
pkg testdata, type NStruct struct, C int64
pkg testdata, type NUint16 uint16
pkg testdata, type NUint32 uint32
pkg testdata, type NUint64 uint64
pkg testdata, type NUnion interface, Index() int
pkg testdata, type NUnion interface, Interface() interface{}
pkg testdata, type NUnion interface, Name() string
pkg testdata, type NUnion interface, unexported methods
pkg testdata, type NUnionA struct
pkg testdata, type NUnionA struct, Value bool
pkg testdata, type NUnionB struct
pkg testdata, type NUnionB struct, Value string
pkg testdata, type NUnionC struct
pkg testdata, type NUnionC struct, Value int64
pkg testdata, type RecA []RecA
pkg testdata, type RecStruct struct
pkg testdata, type RecStruct struct, A *RecStruct
pkg testdata, type RecX []RecY
pkg testdata, type RecY []RecX
pkg testdata, type SetOnlyA map[bool]struct{}
pkg testdata, type SetOnlyA2 map[NBool]struct{}
pkg testdata, type SetOnlyB map[int16]struct{}
pkg testdata, type SetOnlyB2 map[NInt16]struct{}
pkg testdata, type SetOnlyMap map[float64]bool
pkg testdata, type SetStructMap map[string]bool
pkg testdata, type SometimesSetMap map[float64]*vdl.Value
pkg testdata, type StructOnlyMap map[string]uint64
pkg testdata, type TestCase struct
pkg testdata, type TestCase struct, Hex string
pkg testdata, type TestCase struct, HexMagic string
pkg testdata, type TestCase struct, HexType string
pkg testdata, type TestCase struct, HexValue string
pkg testdata, type TestCase struct, Name string
pkg testdata, type TestCase struct, TypeString string
pkg testdata, type TestCase struct, Value *vdl.Value
pkg testdata, type VomdataStruct struct
pkg testdata, type VomdataStruct struct, CompatData map[string][]*vdl.Type
pkg testdata, type VomdataStruct struct, ConvertData map[string][]ConvertGroup
pkg testdata, type VomdataStruct struct, EncodeDecodeData []*vdl.Value
pkg testdata, type XyzStruct struct
pkg testdata, type XyzStruct struct, X bool
pkg testdata, type XyzStruct struct, Y MBool
pkg testdata, type XyzStruct struct, Z string
pkg testdata, type YzStruct struct
pkg testdata, type YzStruct struct, Y NBool
pkg testdata, type YzStruct struct, Z NString
pkg testdata, type ZStruct struct
pkg testdata, type ZStruct struct, Z string
pkg testdata, var BeanEnumAll [...]BeanEnum
pkg testdata, var BrieEnumAll [...]BrieEnum
pkg testdata, var CompatTests map[string][]*vdl.Type
pkg testdata, var ConvertTests map[string][]ConvertGroup
pkg testdata, var FoodEnumAll [...]FoodEnum
pkg testdata, var NEnumAll [...]NEnum
pkg testdata, var Tests []TestCase
