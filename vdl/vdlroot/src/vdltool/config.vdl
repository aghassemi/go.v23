// Package vdltool describes types used by the vdl tool itself.
package vdltool

// Config specifies the configuration for the vdl tool.  This is typically
// represented in optional "vdl.config" files in each vdl source package.  Each
// vdl.config file implicitly imports this package.  E.g. you may refer to
// vdltool.Config in the "vdl.config" file without explicitly importing vdltool.
type Config struct {
	// GenLanguages restricts the set of code generation languages.  If the set is
	// empty, all supported languages are allowed to be generated.
	GenLanguages set[GenLanguage]

	// Language-specific configurations.
	Go         GoConfig
	Java       JavaConfig
	Javascript JavascriptConfig
}

// GenLanguage enumerates the known code generation languages.
type GenLanguage enum {
	Go
	Java
	Javascript
}

// GoConfig specifies go specific configuration.
type GoConfig struct {
	NativeTypes []GoNativeType
}

// GoNativeType describes the mapping from a VDL wire type to a Go native type.
// This is typically used when the Go native type is an idiomatic type
// convenient for the user, but you still need a standard VDL representation for
// wire compatibility.  E.g. the VDL time package is necessary for wire
// compatibility across languages, while generated Go code uses the standard Go
// time package.
//
// The code generator assumes the existence of a pair of conversion functions
// converting between the wire and native types:
//   type WireType ...
//   func (x WireType) VDLToNative(n *Native) error
//   func (x *WireType) VDLFromNative(n Native) error
//
// TODO(toddw): VDL compiler support for native types isn't implemented yet.
type GoNativeType struct {
	// WireType is the name of the vdl type that describes the format on the wire.
	// The wire type must be defined in the vdl package associated with the
	// vdl.config file; i.e. in the same directory.
	WireType string
	// NativeType is the name of the Go native type.  Include the package
	// qualifier if the Go native type isn't defined in the same package as the
	// wire type, and add import(s) for the necessary Go packages.
	NativeType string
	// Imports lists the Go imports required by NativeType.
	Imports []string
}

// JavaConfig specifies java specific configuration.
type JavaConfig struct {
}

// JavascriptConfig specifies javascript specific configuration.
type JavascriptConfig struct {
}
