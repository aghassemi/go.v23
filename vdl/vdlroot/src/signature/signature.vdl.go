// This file was auto-generated by the veyron vdl tool.
// Source: signature.vdl

package signature

import (
	// The non-user imports are prefixed with "__" to prevent collisions.
	__vdl "veyron.io/veyron/veyron2/vdl"
	__vdlutil "veyron.io/veyron/veyron2/vdl/vdlutil"
)

// Interface describes the signature of an interface.
type Interface struct {
	Name    string
	PkgPath string
	Doc     string
	Embeds  []Embed  // No special ordering.
	Methods []Method // Ordered by method name.
}

func (Interface) __VDLReflect(struct {
	Name string "signature.Interface"
}) {
}

// Embed describes the signature of an embedded interface.
type Embed struct {
	Name    string
	PkgPath string
	Doc     string
}

func (Embed) __VDLReflect(struct {
	Name string "signature.Embed"
}) {
}

// Method describes the signature of an interface method.
type Method struct {
	Name      string
	Doc       string
	InArgs    []Arg           // Input arguments
	OutArgs   []Arg           // Output arguments
	InStream  *Arg            // Input stream (optional)
	OutStream *Arg            // Output stream (optional)
	Tags      []__vdlutil.Any // Method tags
}

func (Method) __VDLReflect(struct {
	Name string "signature.Method"
}) {
}

// Arg describes the signature of a single argument.
type Arg struct {
	Name string
	Doc  string
	Type *__vdl.Type // Type of the argument.
}

func (Arg) __VDLReflect(struct {
	Name string "signature.Arg"
}) {
}

func init() {
	__vdl.Register(Interface{})
	__vdl.Register(Embed{})
	__vdl.Register(Method{})
	__vdl.Register(Arg{
		Type: __vdl.TypeOf((*__vdlutil.Any)(nil)),
	})
}
