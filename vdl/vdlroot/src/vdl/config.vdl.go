// This file was auto-generated by the veyron vdl tool.
// Source: config.vdl

// Package vdl describes the configuration for the vdl tool.
package vdl

// Config specifies the configuration for the vdl tool.  This is typically
// represented in optional "vdl.config" files in each vdl source package.  Each
// "vdl.config" file implicitly imports this package.  E.g. you may refer to
// vdl.Go in the "vdl.config" file without explicitly importing "vdl".
type Config struct {
	// GenLanguages restricts the set of code generation languages.  If the set is
	// empty, all supported languages are allowed to be generated.
	GenLanguages map[GenLanguage]struct{}
	// Language-specific configurations.
	Go         GoConfig
	Java       JavaConfig
	Javascript JavascriptConfig
}

// GenLanguage enumerates the known code generation languages.
type GenLanguage int

const (
	GenLanguageGo GenLanguage = iota
	GenLanguageJava
	GenLanguageJavascript
)

// GenLanguageAll holds all labels for GenLanguage.
var GenLanguageAll = []GenLanguage{GenLanguageGo, GenLanguageJava, GenLanguageJavascript}

// GenLanguageFromString creates a GenLanguage from a string label.
// Returns true iff the label is valid.
func GenLanguageFromString(label string) (x GenLanguage, ok bool) {
	ok = x.Assign(label)
	return
}

// Assign assigns label to x.
// Returns true iff the label is valid.
func (x *GenLanguage) Assign(label string) bool {
	switch label {
	case "Go":
		*x = GenLanguageGo
		return true
	case "Java":
		*x = GenLanguageJava
		return true
	case "Javascript":
		*x = GenLanguageJavascript
		return true
	}
	*x = -1
	return false
}

// String returns the string label of x.
func (x GenLanguage) String() string {
	switch x {
	case GenLanguageGo:
		return "Go"
	case GenLanguageJava:
		return "Java"
	case GenLanguageJavascript:
		return "Javascript"
	}
	return ""
}

// __DescribeEnum describes the GenLanguage enum type.
func (GenLanguage) __DescribeEnum(struct{ Go, Java, Javascript GenLanguage }) {}

// GoConfig specifies go specific configuration.
type GoConfig struct {
	// NoFmt disables gofmt formatting on the generated source.
	NoFmt bool
}

// JavaConfig specifies java specific configuration.
type JavaConfig struct {
}

// JavascriptConfig specifies javascript specific configuration.
type JavascriptConfig struct {
}
