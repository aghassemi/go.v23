package java

import (
	"bytes"
	"log"

	"veyron.io/veyron/veyron2/vdl/compile"
)

const primitiveTmpl = `
// This file was auto-generated by the veyron vdl tool.
// Source: {{.Source}}
package {{.PackagePath}};

/**
 * type {{.Name}} {{.VdlTypeString}} {{.Doc}}
 **/
public final class {{.Name}} extends {{.VdlType}} {
    public static final io.veyron.veyron.veyron2.vdl.VdlType VDL_TYPE =
            io.veyron.veyron.veyron2.vdl.Types.getVdlTypeFromReflection({{.Name}}.class);

    public {{.Name}}({{.ValueType}} value) {
        super(VDL_TYPE, value);
    }

    @SuppressWarnings("hiding")
    public static final android.os.Parcelable.Creator<{{.Name}}> CREATOR
        = new android.os.Parcelable.Creator<{{.Name}}>() {
        @Override
        public {{.Name}} createFromParcel(android.os.Parcel in) {
            return new {{.Name}}({{.VdlType}}.CREATOR.createFromParcel(in).getValue());
        }
        @Override
        public {{.Name}}[] newArray(int size) {
            return new {{.Name}}[size];
        }
    };

    public {{.Name}}() {
        super(VDL_TYPE);
    }

    @Override
    public <T> com.google.gson.TypeAdapter<T> create(com.google.gson.Gson gson,
            com.google.gson.reflect.TypeToken<T> type) {
        if (!type.equals(new com.google.gson.reflect.TypeToken<{{.Name}}>(){})) {
            return null;
        }
        final com.google.gson.TypeAdapter<{{.ValueClass}}> delegate =
                gson.getAdapter(new com.google.gson.reflect.TypeToken<{{.ValueClass}}>() {});
        return new com.google.gson.TypeAdapter<T>() {
            @Override
            public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {
                delegate.write(out, (({{.Name}}) value).getValue());
            }

            @SuppressWarnings("unchecked")
            @Override
            public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {
                return (T) new {{.Name}}(delegate.read(in));
            }
        };
    }
}
`

// genJavaPrimitiveFile generates the Java class file for the provided user-defined type.
func genJavaPrimitiveFile(tdef *compile.TypeDef, env *compile.Env) JavaFileInfo {
	valueType, _ := javaBuiltInType(tdef.Type, false)
	valueClass, _ := javaBuiltInType(tdef.Type, true)
	data := struct {
		VdlType       string
		ValueType     string
		ValueClass    string
		Doc           string
		Name          string
		PackagePath   string
		Source        string
		VdlTypeString string
	}{
		VdlType:       javaVdlPrimitiveType(tdef.Type.Kind()),
		ValueType:     valueType,
		ValueClass:    valueClass,
		Doc:           javaDocInComment(tdef.Doc),
		Name:          tdef.Name,
		PackagePath:   javaPath(javaGenPkgPath(tdef.File.Package.Path)),
		Source:        tdef.File.BaseName,
		VdlTypeString: tdef.Type.String(),
	}
	var buf bytes.Buffer
	err := parseTmpl("primitive", primitiveTmpl).Execute(&buf, data)
	if err != nil {
		log.Fatalf("vdl: couldn't execute primitive template: %v", err)
	}
	return JavaFileInfo{
		Name: tdef.Name + ".java",
		Data: buf.Bytes(),
	}
}
