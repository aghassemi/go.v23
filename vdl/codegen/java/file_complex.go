package java

import (
	"bytes"
	"fmt"
	"log"

	"veyron.io/veyron/veyron2/vdl"
	"veyron.io/veyron/veyron2/vdl/compile"
)

const complexTmpl = `
// This file was auto-generated by the veyron vdl tool.
// Source: {{.Source}}
package {{.PackagePath}};

/**
 * type {{.Name}} {{.VdlTypeString}} {{.Doc}}
 **/
public final class {{.Name}} extends {{.VdlComplex}} {
    public static final io.veyron.veyron.veyron2.vdl.VdlType VDL_TYPE =
            io.veyron.veyron.veyron2.vdl.Types.getVdlTypeFromReflection({{.Name}}.class);

    public {{.Name}}({{.ValueType}} real, {{.ValueType}} imag) {
        super(VDL_TYPE, real, imag);
    }

    public {{.Name}}({{.ValueType}} real) {
        this(real, 0);
    }

    @SuppressWarnings("hiding")
    public static final android.os.Parcelable.Creator<{{.Name}}> CREATOR
        = new android.os.Parcelable.Creator<{{.Name}}>() {
        @Override
        public {{.Name}} createFromParcel(android.os.Parcel in) {
            {{.VdlComplex}} value = {{.VdlComplex}}.CREATOR.createFromParcel(in);
            return new {{.Name}}(value.getReal(), value.getImag());
        }

        @Override
        public {{.Name}}[] newArray(int size) {
            return new {{.Name}}[size];
        }
    };
}
`

// genJavaComplexFile generates the Java class file for the provided user-defined VDL complex type.
func genJavaComplexFile(tdef *compile.TypeDef, env *compile.Env) JavaFileInfo {
	var ValueType string
	switch kind := tdef.Type.Kind(); kind {
	case vdl.Complex64:
		ValueType = "float"
	case vdl.Complex128:
		ValueType = "double"
	default:
		panic(fmt.Errorf("val: unhandled kind: %v", kind))
	}
	data := struct {
		VdlComplex    string
		ValueType     string
		Doc           string
		Name          string
		PackagePath   string
		Source        string
		VdlTypeString string
	}{
		VdlComplex:    javaVdlPrimitiveType(tdef.Type.Kind()),
		ValueType:     ValueType,
		Doc:           javaDocInComment(tdef.Doc),
		Name:          tdef.Name,
		PackagePath:   javaPath(javaGenPkgPath(tdef.File.Package.Path)),
		Source:        tdef.File.BaseName,
		VdlTypeString: tdef.Type.String(),
	}
	var buf bytes.Buffer
	err := parseTmpl("complex", complexTmpl).Execute(&buf, data)
	if err != nil {
		log.Fatalf("vdl: couldn't execute VDL complex template: %v", err)
	}
	return JavaFileInfo{
		Name: tdef.Name + ".java",
		Data: buf.Bytes(),
	}
}
