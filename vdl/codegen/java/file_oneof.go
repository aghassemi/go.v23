package java

import (
	"bytes"
	"log"

	"veyron.io/veyron/veyron2/vdl/compile"
)

const oneOfTmpl = `
// This file was auto-generated by the veyron vdl tool.
// Source: {{.Source}}
package {{.PackagePath}};

/**
 * type {{.Name}} {{.VdlTypeString}} {{.Doc}}
 **/
@io.veyron.veyron.veyron2.vdl.GeneratedFromVdlType("{{.VdlTypeName}}")
{{ .AccessModifier }} final class {{.Name}} extends io.veyron.veyron.veyron2.vdl.VdlOneOf {
    public static final com.google.common.collect.ImmutableList<com.google.common.reflect.TypeToken<?>> TYPES =
            new com.google.common.collect.ImmutableList.Builder<com.google.common.reflect.TypeToken<?>>()
    {{ range $type := .OneOfTypes }}
            .add(new com.google.common.reflect.TypeToken<{{$type}}>(){})
    {{ end }}
            .build();

    public static final io.veyron.veyron.veyron2.vdl.VdlType VDL_TYPE =
            io.veyron.veyron.veyron2.vdl.Types.getVdlTypeFromReflection({{.Name}}.class);

    public {{.Name}}() {
        super(VDL_TYPE);
    }
}
`

// genJavaOneOfFile generates the Java class file for the provided user-defined oneOf type.
func genJavaOneOfFile(tdef *compile.TypeDef, env *compile.Env) JavaFileInfo {
	types := make([]string, tdef.Type.NumOneOfType())
	for i := 0; i < tdef.Type.NumOneOfType(); i++ {
		types[i] = javaType(tdef.Type.OneOfType(i), true, env)
	}
	javaTypeName := toUpperCamelCase(tdef.Name)
	data := struct {
		AccessModifier string
		OneOfTypes     []string
		Doc            string
		Name           string
		PackagePath    string
		Source         string
		VdlTypeName    string
		VdlTypeString  string
	}{
		AccessModifier: accessModifierForName(tdef.Name),
		OneOfTypes:     types,
		Doc:            javaDocInComment(tdef.Doc),
		Name:           javaTypeName,
		PackagePath:    javaPath(javaGenPkgPath(tdef.File.Package.Path)),
		Source:         tdef.File.BaseName,
		VdlTypeName:    tdef.Type.Name(),
		VdlTypeString:  tdef.Type.String(),
	}
	var buf bytes.Buffer
	err := parseTmpl("oneOf", oneOfTmpl).Execute(&buf, data)
	if err != nil {
		log.Fatalf("vdl: couldn't execute oneOf template: %v", err)
	}
	return JavaFileInfo{
		Name: javaTypeName + ".java",
		Data: buf.Bytes(),
	}
}
