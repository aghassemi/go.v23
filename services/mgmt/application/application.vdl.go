// This file was auto-generated by the veyron vdl tool.
// Source: application.vdl

// Package application defines the type for describing an application.
package application

import (
	// The non-user imports are prefixed with "__" to prevent collisions.
	__vdl "veyron.io/veyron/veyron2/vdl"
)

// Envelope is a collection of metadata that describes an application.
type Envelope struct {
	// Title is the publisher-assigned application title.  Application
	// installations with the same title are considered as belonging to the
	// same application by the application management system.
	//
	// A change in the title signals a new application.
	Title string
	// Args is an array of command-line arguments to be used when executing
	// the binary.
	Args []string
	// Binary is an object name that identifies the application binary.
	Binary string
	// Env is an array that stores the environment variable values to be
	// used when executing the binary.
	Env []string
	// Packages is a map of packages to install on the local filesystem
	// before executing the binary. The map key is the local directory
	// name, relative to the instance's initial work directory, where the
	// package should be installed. The map value is the object name of the
	// package, e.g. With key=pkg1,value=binaryrepo/configfiles, the
	// "configfiles" package will be installed under the "pkg1" directory.
	// Each object's media type determines how to install it.
	//
	// The keys must be valid directory names, without path separators.
	//
	// Any number of packages may be specified.
	Packages map[string]string
}

func (Envelope) __VDLReflect(struct {
	Name string "veyron.io/veyron/veyron2/services/mgmt/application.Envelope"
}) {
}

func init() {
	__vdl.Register(Envelope{})
}

// Device manager application envelopes must present this title.
const DeviceManagerTitle = "device manager"
