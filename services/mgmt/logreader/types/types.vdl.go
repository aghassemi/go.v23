// This file was auto-generated by the veyron vdl tool.
// Source: types.vdl

// Package types contains the types used by the logreader interface.
package types

import (
	// VDL system imports
	"v.io/core/veyron2/context"
	"v.io/core/veyron2/i18n"
	"v.io/core/veyron2/vdl"
	"v.io/core/veyron2/verror2"
)

// LogLine is a log entry from a log file.
type LogEntry struct {
	// The offset (in bytes) where this entry starts.
	Position int64
	// The content of the log entry.
	Line string
}

func (LogEntry) __VDLReflect(struct {
	Name string "v.io/core/veyron2/services/mgmt/logreader/types.LogEntry"
}) {
}

func init() {
	vdl.Register((*LogEntry)(nil))
}

// A special NumEntries value that indicates that all entries should be
// returned by ReadLog.
const AllEntries = int32(-1)

var (
	EOF = verror2.Register("v.io/core/veyron2/services/mgmt/logreader/types.EOF", verror2.NoRetry, "{1:}{2:} EOF")
)

func init() {
	i18n.Cat().SetWithBase(i18n.LangID("en"), i18n.MsgID(EOF.ID), "{1:}{2:} EOF")
}

// MakeEOF returns an error with the EOF ID.
func MakeEOF(ctx *context.T) error {
	return verror2.Make(EOF, ctx)
}
