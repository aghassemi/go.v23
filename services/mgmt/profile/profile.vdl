// Package profile serves the purpose of abstracting device
// configurations that can be used to run Veyron applications.
//
// OVERVIEW: Profiles are expected to be organized using veyron's
// hierarchical namespace. The nodes of the hierarchy are expected to
// implement: 1) the MountTable interface, to enable extending the
// hierarchy, 2) the Profile interface, to enable profile
// retrieval, and 3) the Glob interface, to enable profile discovery.
package profile

import "veyron2/security"

// Profile abstracts a device's ability to run binaries, and hides
// specifics such as operating system, hardware architecture, and the
// set of installed libraries. Profiles describe binaries and devices,
// and are used to match them.
type Profile interface {
  // Label is the human-readable profile key for the profile,
  // e.g. "linux-media". The label can be used to uniquely identify
  // the profile (for the purpose of matching application binaries and
  // nodes).
  Label() (string, error) {security.ReadLabel}
  // Description is a free-text description of the profile, meant for
  // human consumption.
  Description() (string, error) {security.ReadLabel}
}

