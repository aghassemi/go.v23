// This file was auto-generated by the veyron vdl tool.
// Source: types.vdl

package naming

import (
	// VDL system imports
	"v.io/core/veyron2/vdl"
)

// MountFlag is a bit mask of options to the mount call.
type MountFlag uint32

func (MountFlag) __VDLReflect(struct {
	Name string "v.io/core/veyron2/naming.MountFlag"
}) {
}

// VDLMountedServer represents a server mounted on a specific name.
type VDLMountedServer struct {
	// Server is the OA that's mounted.
	Server string
	// Patterns that match the set of blessings presented by the server
	// listening on the above object address.
	//
	// The type of this field would ideally be security.BlessingPattern,
	// but the resulting cyclic dependency between the security and naming
	// packages precludes that.
	BlessingPatterns []string
	// TTL is the remaining time (in seconds) before the mount entry expires.
	TTL uint32
}

func (VDLMountedServer) __VDLReflect(struct {
	Name string "v.io/core/veyron2/naming.VDLMountedServer"
}) {
}

// MountEntry represents a given name mounted in the mounttable.
type VDLMountEntry struct {
	// Name is the mounted name.
	Name string
	// Servers (if present) specifies the mounted names.
	Servers []VDLMountedServer
	// MT is true if the servers represent mount tables.
	MT bool
}

func (VDLMountEntry) __VDLReflect(struct {
	Name string "v.io/core/veyron2/naming.VDLMountEntry"
}) {
}

// GlobError is returned by namespace.Glob to indicate a subtree of the namespace
// that could not be traversed.
type GlobError struct {
	// Root of the subtree.
	Name string
	// The error that occurred fulfilling the request.
	Error error
}

func (GlobError) __VDLReflect(struct {
	Name string "v.io/core/veyron2/naming.GlobError"
}) {
}

type (
	// VDLGlobReply represents any single field of the VDLGlobReply union type.
	//
	// GlobReply is the data type of the chan returned by Glob__.
	VDLGlobReply interface {
		// Index returns the field index.
		Index() int
		// Interface returns the field value as an interface.
		Interface() interface{}
		// Name returns the field name.
		Name() string
		// __VDLReflect describes the VDLGlobReply union type.
		__VDLReflect(__VDLGlobReplyReflect)
	}
	// VDLGlobReplyEntry represents field Entry of the VDLGlobReply union type.
	VDLGlobReplyEntry struct{ Value VDLMountEntry }
	// VDLGlobReplyError represents field Error of the VDLGlobReply union type.
	VDLGlobReplyError struct{ Value GlobError }
	// __VDLGlobReplyReflect describes the VDLGlobReply union type.
	__VDLGlobReplyReflect struct {
		Name  string "v.io/core/veyron2/naming.VDLGlobReply"
		Type  VDLGlobReply
		Union struct {
			Entry VDLGlobReplyEntry
			Error VDLGlobReplyError
		}
	}
)

func (x VDLGlobReplyEntry) Index() int                         { return 0 }
func (x VDLGlobReplyEntry) Interface() interface{}             { return x.Value }
func (x VDLGlobReplyEntry) Name() string                       { return "Entry" }
func (x VDLGlobReplyEntry) __VDLReflect(__VDLGlobReplyReflect) {}

func (x VDLGlobReplyError) Index() int                         { return 1 }
func (x VDLGlobReplyError) Interface() interface{}             { return x.Value }
func (x VDLGlobReplyError) Name() string                       { return "Error" }
func (x VDLGlobReplyError) __VDLReflect(__VDLGlobReplyReflect) {}

func init() {
	vdl.Register((*MountFlag)(nil))
	vdl.Register((*VDLMountedServer)(nil))
	vdl.Register((*VDLMountEntry)(nil))
	vdl.Register((*GlobError)(nil))
	vdl.Register((*VDLGlobReply)(nil))
}

const Replace = MountFlag(1) // Replace means the mount should replace what is currently at the mount point

const MT = MountFlag(2) // MT means that the target server is a mount table.
