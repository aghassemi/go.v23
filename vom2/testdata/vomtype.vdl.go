// This file was auto-generated by the veyron vdl tool.
// Source: vomtype.vdl

package testdata

type NBool bool

type NString string

type NByteSlice []byte

type NByte byte

type NUint16 uint16

type NUint32 uint32

type NUint64 uint64

type NInt16 int16

type NInt32 int32

type NInt64 int64

type NFloat32 float32

type NFloat64 float64

type NComplex64 complex64

type NComplex128 complex128

type NArray2Uint64 [2]uint64

type NListUint64 []uint64

type NSetUint64 map[uint64]struct{}

type NMapUint64String map[uint64]string

type NStruct struct {
	A bool
	B string
	C int64
}

type NEnum int

const (
	NEnumA NEnum = iota
	NEnumB
	NEnumC
)

// NEnumAll holds all labels for NEnum.
var NEnumAll = []NEnum{NEnumA, NEnumB, NEnumC}

// NEnumFromString creates a NEnum from a string label.
// Returns true iff the label is valid.
func NEnumFromString(label string) (x NEnum, ok bool) {
	ok = x.Assign(label)
	return
}

// Assign assigns label to x.
// Returns true iff the label is valid.
func (x *NEnum) Assign(label string) bool {
	switch label {
	case "A":
		*x = NEnumA
		return true
	case "B":
		*x = NEnumB
		return true
	case "C":
		*x = NEnumC
		return true
	}
	*x = -1
	return false
}

// String returns the string label of x.
func (x NEnum) String() string {
	switch x {
	case NEnumA:
		return "A"
	case NEnumB:
		return "B"
	case NEnumC:
		return "C"
	}
	return ""
}

// __DescribeEnum describes the NEnum enum type.
func (NEnum) __DescribeEnum(struct{ A, B, C NEnum }) {}

type (
	// NOneOf represents any single field of the NOneOf oneof type.
	NOneOf interface {
		// Index returns the field index.
		Index() int
		// Name returns the field name.
		Name() string
		// __DescribeOneOf describes the NOneOf oneof type.
		__DescribeOneOf(__NOneOfDesc)
	}
	// NOneOfA represents field A of the NOneOf oneof type.
	NOneOfA struct{ Value bool }
	// NOneOfB represents field B of the NOneOf oneof type.
	NOneOfB struct{ Value string }
	// NOneOfC represents field C of the NOneOf oneof type.
	NOneOfC struct{ Value int64 }
	// __NOneOfDesc describes the NOneOf oneof type.
	__NOneOfDesc struct {
		NOneOf
		A NOneOfA
		B NOneOfB
		C NOneOfC
	}
)

func (NOneOfA) Index() int                   { return 0 }
func (NOneOfA) Name() string                 { return "A" }
func (NOneOfA) __DescribeOneOf(__NOneOfDesc) {}

func (NOneOfB) Index() int                   { return 1 }
func (NOneOfB) Name() string                 { return "B" }
func (NOneOfB) __DescribeOneOf(__NOneOfDesc) {}

func (NOneOfC) Index() int                   { return 2 }
func (NOneOfC) Name() string                 { return "C" }
func (NOneOfC) __DescribeOneOf(__NOneOfDesc) {}

// Nested Custom Types
type MBool NBool

type MStruct struct {
	A bool
	B NBool
	C MBool
}

type MList []NListUint64

type MMap map[NFloat32]NListUint64
