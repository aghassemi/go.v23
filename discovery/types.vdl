// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package discovery

// Service represents service information for service discovery.
//
// TODO(jhahn): Add descriptive name for a service instance.
type Service struct {
	// The 128 bit (16 byte) universal unique identifier of a service instance.
	// If this is not specified, a random UUID will be used.
	InstanceUuid []byte
	// The interface that the service implements.
	// E.g., 'v.io/v23/services/vtrace.Store'.
	InterfaceName string
	// The service attributes.
	// E.g., {'resolution': '1024x768'}.
	Attrs Attributes
	// The addresses that the service is served on.
	// E.g., '/host:port/a/b/c'.
	Addrs []string
}

// Attributes represents service attributes as a key/value pair.
type Attributes map[string]string

// Found represents a service that is discovered by scan.
type Found struct {
	Service Service
	// TODO(jhahn): Add proximity.
}

// Lost represents a service that is lost during scan.
type Lost struct {
	Service Service
}

// Update represents a discovery update.
type Update union {
	Found Found
	Lost  Lost
}
